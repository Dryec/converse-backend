// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: api/api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protocol {

  /// <summary>Holder for reflection information generated from api/api.proto</summary>
  public static partial class ApiReflection {

    #region Descriptor
    /// <summary>File descriptor for api/api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1hcGkvYXBpLnByb3RvEghwcm90b2NvbBoPY29yZS9Ucm9uLnByb3RvGhNj",
            "b3JlL0NvbnRyYWN0LnByb3RvGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnBy",
            "b3RvItwCCgZSZXR1cm4SDgoGcmVzdWx0GAEgASgIEiwKBGNvZGUYAiABKA4y",
            "Hi5wcm90b2NvbC5SZXR1cm4ucmVzcG9uc2VfY29kZRIPCgdtZXNzYWdlGAMg",
            "ASgMIoICCg1yZXNwb25zZV9jb2RlEgsKB1NVQ0NFU1MQABIMCghTSUdFUlJP",
            "UhABEhsKF0NPTlRSQUNUX1ZBTElEQVRFX0VSUk9SEAISFgoSQ09OVFJBQ1Rf",
            "RVhFX0VSUk9SEAMSEgoOQkFORFdJVEhfRVJST1IQBBIZChVEVVBfVFJBTlNB",
            "Q1RJT05fRVJST1IQBRIPCgtUQVBPU19FUlJPUhAGEh0KGVRPT19CSUdfVFJB",
            "TlNBQ1RJT05fRVJST1IQBxIgChxUUkFOU0FDVElPTl9FWFBJUkFUSU9OX0VS",
            "Uk9SEAgSDwoLU0VSVkVSX0JVU1kQCRIPCgtPVEhFUl9FUlJPUhAUIjcKDkJs",
            "b2NrUmVmZXJlbmNlEhEKCWJsb2NrX251bRgBIAEoAxISCgpibG9ja19oYXNo",
            "GAIgASgMIjMKC1dpdG5lc3NMaXN0EiQKCXdpdG5lc3NlcxgBIAMoCzIRLnBy",
            "b3RvY29sLldpdG5lc3MiNQoMUHJvcG9zYWxMaXN0EiUKCXByb3Bvc2FscxgB",
            "IAMoCzISLnByb3RvY29sLlByb3Bvc2FsIjUKDEV4Y2hhbmdlTGlzdBIlCgll",
            "eGNoYW5nZXMYASADKAsyEi5wcm90b2NvbC5FeGNoYW5nZSJCCg5Bc3NldElz",
            "c3VlTGlzdBIwCgphc3NldElzc3VlGAEgAygLMhwucHJvdG9jb2wuQXNzZXRJ",
            "c3N1ZUNvbnRyYWN0IisKCUJsb2NrTGlzdBIeCgVibG9jaxgBIAMoCzIPLnBy",
            "b3RvY29sLkJsb2NrIj0KD1RyYW5zYWN0aW9uTGlzdBIqCgt0cmFuc2FjdGlv",
            "bhgBIAMoCzIVLnByb3RvY29sLlRyYW5zYWN0aW9uIkIKGERlbGVnYXRlZFJl",
            "c291cmNlTWVzc2FnZRITCgtmcm9tQWRkcmVzcxgBIAEoDBIRCgl0b0FkZHJl",
            "c3MYAiABKAwiTwoVRGVsZWdhdGVkUmVzb3VyY2VMaXN0EjYKEWRlbGVnYXRl",
            "ZFJlc291cmNlGAEgAygLMhsucHJvdG9jb2wuRGVsZWdhdGVkUmVzb3VyY2Ui",
            "KQoITm9kZUxpc3QSHQoFbm9kZXMYASADKAsyDi5wcm90b2NvbC5Ob2RlIioK",
            "BE5vZGUSIgoHYWRkcmVzcxgBIAEoCzIRLnByb3RvY29sLkFkZHJlc3MiJQoH",
            "QWRkcmVzcxIMCgRob3N0GAEgASgMEgwKBHBvcnQYAiABKAUiDgoMRW1wdHlN",
            "ZXNzYWdlIhwKDU51bWJlck1lc3NhZ2USCwoDbnVtGAEgASgDIh0KDEJ5dGVz",
            "TWVzc2FnZRINCgV2YWx1ZRgBIAEoDCJFCgtUaW1lTWVzc2FnZRIbChNiZWdp",
            "bkluTWlsbGlzZWNvbmRzGAEgASgDEhkKEWVuZEluTWlsbGlzZWNvbmRzGAIg",
            "ASgDIi4KCkJsb2NrTGltaXQSEAoIc3RhcnROdW0YASABKAMSDgoGZW5kTnVt",
            "GAIgASgDIjsKEFRyYW5zYWN0aW9uTGltaXQSFQoNdHJhbnNhY3Rpb25JZBgB",
            "IAEoDBIQCghsaW1pdE51bRgCIAEoAyJVChBBY2NvdW50UGFnaW5hdGVkEiIK",
            "B2FjY291bnQYASABKAsyES5wcm90b2NvbC5BY2NvdW50Eg4KBm9mZnNldBgC",
            "IAEoAxINCgVsaW1pdBgDIAEoAyJhChRUaW1lUGFnaW5hdGVkTWVzc2FnZRIq",
            "Cgt0aW1lTWVzc2FnZRgBIAEoCzIVLnByb3RvY29sLlRpbWVNZXNzYWdlEg4K",
            "Bm9mZnNldBgCIAEoAxINCgVsaW1pdBgDIAEoAyKHAwoRQWNjb3VudE5ldE1l",
            "c3NhZ2USEwoLZnJlZU5ldFVzZWQYASABKAMSFAoMZnJlZU5ldExpbWl0GAIg",
            "ASgDEg8KB05ldFVzZWQYAyABKAMSEAoITmV0TGltaXQYBCABKAMSQwoMYXNz",
            "ZXROZXRVc2VkGAUgAygLMi0ucHJvdG9jb2wuQWNjb3VudE5ldE1lc3NhZ2Uu",
            "QXNzZXROZXRVc2VkRW50cnkSRQoNYXNzZXROZXRMaW1pdBgGIAMoCzIuLnBy",
            "b3RvY29sLkFjY291bnROZXRNZXNzYWdlLkFzc2V0TmV0TGltaXRFbnRyeRIV",
            "Cg1Ub3RhbE5ldExpbWl0GAcgASgDEhYKDlRvdGFsTmV0V2VpZ2h0GAggASgD",
            "GjMKEUFzc2V0TmV0VXNlZEVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgC",
            "IAEoAzoCOAEaNAoSQXNzZXROZXRMaW1pdEVudHJ5EgsKA2tleRgBIAEoCRIN",
            "CgV2YWx1ZRgCIAEoAzoCOAEinwQKFkFjY291bnRSZXNvdXJjZU1lc3NhZ2US",
            "EwoLZnJlZU5ldFVzZWQYASABKAMSFAoMZnJlZU5ldExpbWl0GAIgASgDEg8K",
            "B05ldFVzZWQYAyABKAMSEAoITmV0TGltaXQYBCABKAMSSAoMYXNzZXROZXRV",
            "c2VkGAUgAygLMjIucHJvdG9jb2wuQWNjb3VudFJlc291cmNlTWVzc2FnZS5B",
            "c3NldE5ldFVzZWRFbnRyeRJKCg1hc3NldE5ldExpbWl0GAYgAygLMjMucHJv",
            "dG9jb2wuQWNjb3VudFJlc291cmNlTWVzc2FnZS5Bc3NldE5ldExpbWl0RW50",
            "cnkSFQoNVG90YWxOZXRMaW1pdBgHIAEoAxIWCg5Ub3RhbE5ldFdlaWdodBgI",
            "IAEoAxISCgpFbmVyZ3lVc2VkGA0gASgDEhMKC0VuZXJneUxpbWl0GA4gASgD",
            "EhgKEFRvdGFsRW5lcmd5TGltaXQYDyABKAMSGQoRVG90YWxFbmVyZ3lXZWln",
            "aHQYECABKAMSEwoLc3RvcmFnZVVzZWQYFSABKAMSFAoMc3RvcmFnZUxpbWl0",
            "GBYgASgDGjMKEUFzc2V0TmV0VXNlZEVudHJ5EgsKA2tleRgBIAEoCRINCgV2",
            "YWx1ZRgCIAEoAzoCOAEaNAoSQXNzZXROZXRMaW1pdEVudHJ5EgsKA2tleRgB",
            "IAEoCRINCgV2YWx1ZRgCIAEoAzoCOAEiMQoQUGFnaW5hdGVkTWVzc2FnZRIO",
            "CgZvZmZzZXQYASABKAMSDQoFbGltaXQYAiABKAMiTAoTRWFzeVRyYW5zZmVy",
            "TWVzc2FnZRISCgpwYXNzUGhyYXNlGAEgASgMEhEKCXRvQWRkcmVzcxgCIAEo",
            "DBIOCgZhbW91bnQYAyABKAMiVQocRWFzeVRyYW5zZmVyQnlQcml2YXRlTWVz",
            "c2FnZRISCgpwcml2YXRlS2V5GAEgASgMEhEKCXRvQWRkcmVzcxgCIAEoDBIO",
            "CgZhbW91bnQYAyABKAMicgoURWFzeVRyYW5zZmVyUmVzcG9uc2USKgoLdHJh",
            "bnNhY3Rpb24YASABKAsyFS5wcm90b2NvbC5UcmFuc2FjdGlvbhIgCgZyZXN1",
            "bHQYAiABKAsyEC5wcm90b2NvbC5SZXR1cm4SDAoEdHhpZBgDIAEoDCI+ChdB",
            "ZGRyZXNzUHJLZXlQYWlyTWVzc2FnZRIPCgdhZGRyZXNzGAEgASgJEhIKCnBy",
            "aXZhdGVLZXkYAiABKAkiiwEKFFRyYW5zYWN0aW9uRXh0ZW50aW9uEioKC3Ry",
            "YW5zYWN0aW9uGAEgASgLMhUucHJvdG9jb2wuVHJhbnNhY3Rpb24SDAoEdHhp",
            "ZBgCIAEoDBIXCg9jb25zdGFudF9yZXN1bHQYAyADKAwSIAoGcmVzdWx0GAQg",
            "ASgLMhAucHJvdG9jb2wuUmV0dXJuIoQBCg5CbG9ja0V4dGVudGlvbhI0Cgx0",
            "cmFuc2FjdGlvbnMYASADKAsyHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4dGVu",
            "dGlvbhIrCgxibG9ja19oZWFkZXIYAiABKAsyFS5wcm90b2NvbC5CbG9ja0hl",
            "YWRlchIPCgdibG9ja2lkGAMgASgMIj0KEkJsb2NrTGlzdEV4dGVudGlvbhIn",
            "CgVibG9jaxgBIAMoCzIYLnByb3RvY29sLkJsb2NrRXh0ZW50aW9uIk8KGFRy",
            "YW5zYWN0aW9uTGlzdEV4dGVudGlvbhIzCgt0cmFuc2FjdGlvbhgBIAMoCzIe",
            "LnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uMuNMCgZXYWxsZXQSZwoK",
            "R2V0QWNjb3VudBIRLnByb3RvY29sLkFjY291bnQaES5wcm90b2NvbC5BY2Nv",
            "dW50IjOC0+STAi0iEi93YWxsZXQvZ2V0YWNjb3VudDoBKloUEhIvd2FsbGV0",
            "L2dldGFjY291bnQScwoOR2V0QWNjb3VudEJ5SWQSES5wcm90b2NvbC5BY2Nv",
            "dW50GhEucHJvdG9jb2wuQWNjb3VudCI7gtPkkwI1IhYvd2FsbGV0L2dldGFj",
            "Y291bnRieWlkOgEqWhgSFi93YWxsZXQvZ2V0YWNjb3VudGJ5aWQSiQEKEUNy",
            "ZWF0ZVRyYW5zYWN0aW9uEhoucHJvdG9jb2wuVHJhbnNmZXJDb250cmFjdBoV",
            "LnByb3RvY29sLlRyYW5zYWN0aW9uIkGC0+STAjsiGS93YWxsZXQvY3JlYXRl",
            "dHJhbnNhY3Rpb246ASpaGxIZL3dhbGxldC9jcmVhdGV0cmFuc2FjdGlvbhJS",
            "ChJDcmVhdGVUcmFuc2FjdGlvbjISGi5wcm90b2NvbC5UcmFuc2ZlckNvbnRy",
            "YWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABKIAQoUQnJv",
            "YWRjYXN0VHJhbnNhY3Rpb24SFS5wcm90b2NvbC5UcmFuc2FjdGlvbhoQLnBy",
            "b3RvY29sLlJldHVybiJHgtPkkwJBIhwvd2FsbGV0L2Jyb2FkY2FzdHRyYW5z",
            "YWN0aW9uOgEqWh4SHC93YWxsZXQvYnJvYWRjYXN0dHJhbnNhY3Rpb24SggEK",
            "DVVwZGF0ZUFjY291bnQSHy5wcm90b2NvbC5BY2NvdW50VXBkYXRlQ29udHJh",
            "Y3QaFS5wcm90b2NvbC5UcmFuc2FjdGlvbiI5gtPkkwIzIhUvd2FsbGV0L3Vw",
            "ZGF0ZWFjY291bnQ6ASpaFxIVL3dhbGxldC91cGRhdGVhY2NvdW50En4KDFNl",
            "dEFjY291bnRJZBIeLnByb3RvY29sLlNldEFjY291bnRJZENvbnRyYWN0GhUu",
            "cHJvdG9jb2wuVHJhbnNhY3Rpb24iN4LT5JMCMSIUL3dhbGxldC9zZXRhY2Nv",
            "dW50aWQ6ASpaFhIUL3dhbGxldC9zZXRhY2NvdW50aWQSUwoOVXBkYXRlQWNj",
            "b3VudDISHy5wcm90b2NvbC5BY2NvdW50VXBkYXRlQ29udHJhY3QaHi5wcm90",
            "b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAEo8BChJWb3RlV2l0bmVzc0Fj",
            "Y291bnQSHS5wcm90b2NvbC5Wb3RlV2l0bmVzc0NvbnRyYWN0GhUucHJvdG9j",
            "b2wuVHJhbnNhY3Rpb24iQ4LT5JMCPSIaL3dhbGxldC92b3Rld2l0bmVzc2Fj",
            "Y291bnQ6ASpaHBIaL3dhbGxldC92b3Rld2l0bmVzc2FjY291bnQSUgoNVXBk",
            "YXRlU2V0dGluZxIfLnByb3RvY29sLlVwZGF0ZVNldHRpbmdDb250cmFjdBoe",
            "LnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASWgoRVXBkYXRlRW5l",
            "cmd5TGltaXQSIy5wcm90b2NvbC5VcGRhdGVFbmVyZ3lMaW1pdENvbnRyYWN0",
            "Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABJWChNWb3RlV2l0",
            "bmVzc0FjY291bnQyEh0ucHJvdG9jb2wuVm90ZVdpdG5lc3NDb250cmFjdBoe",
            "LnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASiAEKEENyZWF0ZUFz",
            "c2V0SXNzdWUSHC5wcm90b2NvbC5Bc3NldElzc3VlQ29udHJhY3QaFS5wcm90",
            "b2NvbC5UcmFuc2FjdGlvbiI/gtPkkwI5Ihgvd2FsbGV0L2NyZWF0ZWFzc2V0",
            "aXNzdWU6ASpaGhIYL3dhbGxldC9jcmVhdGVhc3NldGlzc3VlElMKEUNyZWF0",
            "ZUFzc2V0SXNzdWUyEhwucHJvdG9jb2wuQXNzZXRJc3N1ZUNvbnRyYWN0Gh4u",
            "cHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABKCAQoNVXBkYXRlV2l0",
            "bmVzcxIfLnByb3RvY29sLldpdG5lc3NVcGRhdGVDb250cmFjdBoVLnByb3Rv",
            "Y29sLlRyYW5zYWN0aW9uIjmC0+STAjMiFS93YWxsZXQvdXBkYXRld2l0bmVz",
            "czoBKloXEhUvd2FsbGV0L3VwZGF0ZXdpdG5lc3MSUwoOVXBkYXRlV2l0bmVz",
            "czISHy5wcm90b2NvbC5XaXRuZXNzVXBkYXRlQ29udHJhY3QaHi5wcm90b2Nv",
            "bC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAEoIBCg1DcmVhdGVBY2NvdW50Eh8u",
            "cHJvdG9jb2wuQWNjb3VudENyZWF0ZUNvbnRyYWN0GhUucHJvdG9jb2wuVHJh",
            "bnNhY3Rpb24iOYLT5JMCMyIVL3dhbGxldC9jcmVhdGVhY2NvdW50OgEqWhcS",
            "FS93YWxsZXQvY3JlYXRlYWNjb3VudBJTCg5DcmVhdGVBY2NvdW50MhIfLnBy",
            "b3RvY29sLkFjY291bnRDcmVhdGVDb250cmFjdBoeLnByb3RvY29sLlRyYW5z",
            "YWN0aW9uRXh0ZW50aW9uIgASggEKDUNyZWF0ZVdpdG5lc3MSHy5wcm90b2Nv",
            "bC5XaXRuZXNzQ3JlYXRlQ29udHJhY3QaFS5wcm90b2NvbC5UcmFuc2FjdGlv",
            "biI5gtPkkwIzIhUvd2FsbGV0L2NyZWF0ZXdpdG5lc3M6ASpaFxIVL3dhbGxl",
            "dC9jcmVhdGV3aXRuZXNzElMKDkNyZWF0ZVdpdG5lc3MyEh8ucHJvdG9jb2wu",
            "V2l0bmVzc0NyZWF0ZUNvbnRyYWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25F",
            "eHRlbnRpb24iABKCAQoNVHJhbnNmZXJBc3NldBIfLnByb3RvY29sLlRyYW5z",
            "ZmVyQXNzZXRDb250cmFjdBoVLnByb3RvY29sLlRyYW5zYWN0aW9uIjmC0+ST",
            "AjMiFS93YWxsZXQvdHJhbnNmZXJhc3NldDoBKloXEhUvd2FsbGV0L3RyYW5z",
            "ZmVyYXNzZXQSUwoOVHJhbnNmZXJBc3NldDISHy5wcm90b2NvbC5UcmFuc2Zl",
            "ckFzc2V0Q29udHJhY3QaHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlv",
            "biIAEqIBChVQYXJ0aWNpcGF0ZUFzc2V0SXNzdWUSJy5wcm90b2NvbC5QYXJ0",
            "aWNpcGF0ZUFzc2V0SXNzdWVDb250cmFjdBoVLnByb3RvY29sLlRyYW5zYWN0",
            "aW9uIkmC0+STAkMiHS93YWxsZXQvcGFydGljaXBhdGVhc3NldGlzc3VlOgEq",
            "Wh8SHS93YWxsZXQvcGFydGljaXBhdGVhc3NldGlzc3VlEmMKFlBhcnRpY2lw",
            "YXRlQXNzZXRJc3N1ZTISJy5wcm90b2NvbC5QYXJ0aWNpcGF0ZUFzc2V0SXNz",
            "dWVDb250cmFjdBoeLnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgAS",
            "ggEKDUZyZWV6ZUJhbGFuY2USHy5wcm90b2NvbC5GcmVlemVCYWxhbmNlQ29u",
            "dHJhY3QaFS5wcm90b2NvbC5UcmFuc2FjdGlvbiI5gtPkkwIzIhUvd2FsbGV0",
            "L2ZyZWV6ZWJhbGFuY2U6ASpaFxIVL3dhbGxldC9mcmVlemViYWxhbmNlElMK",
            "DkZyZWV6ZUJhbGFuY2UyEh8ucHJvdG9jb2wuRnJlZXplQmFsYW5jZUNvbnRy",
            "YWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABKKAQoPVW5m",
            "cmVlemVCYWxhbmNlEiEucHJvdG9jb2wuVW5mcmVlemVCYWxhbmNlQ29udHJh",
            "Y3QaFS5wcm90b2NvbC5UcmFuc2FjdGlvbiI9gtPkkwI3Ihcvd2FsbGV0L3Vu",
            "ZnJlZXplYmFsYW5jZToBKloZEhcvd2FsbGV0L3VuZnJlZXplYmFsYW5jZRJX",
            "ChBVbmZyZWV6ZUJhbGFuY2UyEiEucHJvdG9jb2wuVW5mcmVlemVCYWxhbmNl",
            "Q29udHJhY3QaHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAEoIB",
            "Cg1VbmZyZWV6ZUFzc2V0Eh8ucHJvdG9jb2wuVW5mcmVlemVBc3NldENvbnRy",
            "YWN0GhUucHJvdG9jb2wuVHJhbnNhY3Rpb24iOYLT5JMCMyIVL3dhbGxldC91",
            "bmZyZWV6ZWFzc2V0OgEqWhcSFS93YWxsZXQvdW5mcmVlemVhc3NldBJTCg5V",
            "bmZyZWV6ZUFzc2V0MhIfLnByb3RvY29sLlVuZnJlZXplQXNzZXRDb250cmFj",
            "dBoeLnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASigEKD1dpdGhk",
            "cmF3QmFsYW5jZRIhLnByb3RvY29sLldpdGhkcmF3QmFsYW5jZUNvbnRyYWN0",
            "GhUucHJvdG9jb2wuVHJhbnNhY3Rpb24iPYLT5JMCNyIXL3dhbGxldC93aXRo",
            "ZHJhd2JhbGFuY2U6ASpaGRIXL3dhbGxldC93aXRoZHJhd2JhbGFuY2USVwoQ",
            "V2l0aGRyYXdCYWxhbmNlMhIhLnByb3RvY29sLldpdGhkcmF3QmFsYW5jZUNv",
            "bnRyYWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABJ6CgtV",
            "cGRhdGVBc3NldBIdLnByb3RvY29sLlVwZGF0ZUFzc2V0Q29udHJhY3QaFS5w",
            "cm90b2NvbC5UcmFuc2FjdGlvbiI1gtPkkwIvIhMvd2FsbGV0L3VwZGF0ZWFz",
            "c2V0OgEqWhUSEy93YWxsZXQvdXBkYXRlYXNzZXQSTwoMVXBkYXRlQXNzZXQy",
            "Eh0ucHJvdG9jb2wuVXBkYXRlQXNzZXRDb250cmFjdBoeLnByb3RvY29sLlRy",
            "YW5zYWN0aW9uRXh0ZW50aW9uIgASVAoOUHJvcG9zYWxDcmVhdGUSIC5wcm90",
            "b2NvbC5Qcm9wb3NhbENyZWF0ZUNvbnRyYWN0Gh4ucHJvdG9jb2wuVHJhbnNh",
            "Y3Rpb25FeHRlbnRpb24iABJWCg9Qcm9wb3NhbEFwcHJvdmUSIS5wcm90b2Nv",
            "bC5Qcm9wb3NhbEFwcHJvdmVDb250cmFjdBoeLnByb3RvY29sLlRyYW5zYWN0",
            "aW9uRXh0ZW50aW9uIgASVAoOUHJvcG9zYWxEZWxldGUSIC5wcm90b2NvbC5Q",
            "cm9wb3NhbERlbGV0ZUNvbnRyYWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25F",
            "eHRlbnRpb24iABJMCgpCdXlTdG9yYWdlEhwucHJvdG9jb2wuQnV5U3RvcmFn",
            "ZUNvbnRyYWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABJW",
            "Cg9CdXlTdG9yYWdlQnl0ZXMSIS5wcm90b2NvbC5CdXlTdG9yYWdlQnl0ZXND",
            "b250cmFjdBoeLnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASTgoL",
            "U2VsbFN0b3JhZ2USHS5wcm90b2NvbC5TZWxsU3RvcmFnZUNvbnRyYWN0Gh4u",
            "cHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABJUCg5FeGNoYW5nZUNy",
            "ZWF0ZRIgLnByb3RvY29sLkV4Y2hhbmdlQ3JlYXRlQ29udHJhY3QaHi5wcm90",
            "b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAElQKDkV4Y2hhbmdlSW5qZWN0",
            "EiAucHJvdG9jb2wuRXhjaGFuZ2VJbmplY3RDb250cmFjdBoeLnByb3RvY29s",
            "LlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASWAoQRXhjaGFuZ2VXaXRoZHJhdxIi",
            "LnByb3RvY29sLkV4Y2hhbmdlV2l0aGRyYXdDb250cmFjdBoeLnByb3RvY29s",
            "LlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASXgoTRXhjaGFuZ2VUcmFuc2FjdGlv",
            "bhIlLnByb3RvY29sLkV4Y2hhbmdlVHJhbnNhY3Rpb25Db250cmFjdBoeLnBy",
            "b3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASagoJTGlzdE5vZGVzEhYu",
            "cHJvdG9jb2wuRW1wdHlNZXNzYWdlGhIucHJvdG9jb2wuTm9kZUxpc3QiMYLT",
            "5JMCKyIRL3dhbGxldC9saXN0bm9kZXM6ASpaExIRL3dhbGxldC9saXN0bm9k",
            "ZXMSkgEKFkdldEFzc2V0SXNzdWVCeUFjY291bnQSES5wcm90b2NvbC5BY2Nv",
            "dW50GhgucHJvdG9jb2wuQXNzZXRJc3N1ZUxpc3QiS4LT5JMCRSIeL3dhbGxl",
            "dC9nZXRhc3NldGlzc3VlYnlhY2NvdW50OgEqWiASHi93YWxsZXQvZ2V0YXNz",
            "ZXRpc3N1ZWJ5YWNjb3VudBJ6Cg1HZXRBY2NvdW50TmV0EhEucHJvdG9jb2wu",
            "QWNjb3VudBobLnByb3RvY29sLkFjY291bnROZXRNZXNzYWdlIjmC0+STAjMi",
            "FS93YWxsZXQvZ2V0YWNjb3VudG5ldDoBKloXEhUvd2FsbGV0L2dldGFjY291",
            "bnRuZXQSSwoSR2V0QWNjb3VudFJlc291cmNlEhEucHJvdG9jb2wuQWNjb3Vu",
            "dBogLnByb3RvY29sLkFjY291bnRSZXNvdXJjZU1lc3NhZ2UiABKSAQoTR2V0",
            "QXNzZXRJc3N1ZUJ5TmFtZRIWLnByb3RvY29sLkJ5dGVzTWVzc2FnZRocLnBy",
            "b3RvY29sLkFzc2V0SXNzdWVDb250cmFjdCJFgtPkkwI/Ihsvd2FsbGV0L2dl",
            "dGFzc2V0aXNzdWVieW5hbWU6ASpaHRIbL3dhbGxldC9nZXRhc3NldGlzc3Vl",
            "YnluYW1lEk0KF0dldEFzc2V0SXNzdWVMaXN0QnlOYW1lEhYucHJvdG9jb2wu",
            "Qnl0ZXNNZXNzYWdlGhgucHJvdG9jb2wuQXNzZXRJc3N1ZUxpc3QiABJLChFH",
            "ZXRBc3NldElzc3VlQnlJZBIWLnByb3RvY29sLkJ5dGVzTWVzc2FnZRocLnBy",
            "b3RvY29sLkFzc2V0SXNzdWVDb250cmFjdCIAEm0KC0dldE5vd0Jsb2NrEhYu",
            "cHJvdG9jb2wuRW1wdHlNZXNzYWdlGg8ucHJvdG9jb2wuQmxvY2siNYLT5JMC",
            "LyITL3dhbGxldC9nZXRub3dibG9jazoBKloVEhMvd2FsbGV0L2dldG5vd2Js",
            "b2NrEkIKDEdldE5vd0Jsb2NrMhIWLnByb3RvY29sLkVtcHR5TWVzc2FnZRoY",
            "LnByb3RvY29sLkJsb2NrRXh0ZW50aW9uIgASdAoNR2V0QmxvY2tCeU51bRIX",
            "LnByb3RvY29sLk51bWJlck1lc3NhZ2UaDy5wcm90b2NvbC5CbG9jayI5gtPk",
            "kwIzIhUvd2FsbGV0L2dldGJsb2NrYnludW06ASpaFxIVL3dhbGxldC9nZXRi",
            "bG9ja2J5bnVtEkUKDkdldEJsb2NrQnlOdW0yEhcucHJvdG9jb2wuTnVtYmVy",
            "TWVzc2FnZRoYLnByb3RvY29sLkJsb2NrRXh0ZW50aW9uIgASUwodR2V0VHJh",
            "bnNhY3Rpb25Db3VudEJ5QmxvY2tOdW0SFy5wcm90b2NvbC5OdW1iZXJNZXNz",
            "YWdlGhcucHJvdG9jb2wuTnVtYmVyTWVzc2FnZSIAEnAKDEdldEJsb2NrQnlJ",
            "ZBIWLnByb3RvY29sLkJ5dGVzTWVzc2FnZRoPLnByb3RvY29sLkJsb2NrIjeC",
            "0+STAjEiFC93YWxsZXQvZ2V0YmxvY2tieWlkOgEqWhYSFC93YWxsZXQvZ2V0",
            "YmxvY2tieWlkEocBChNHZXRCbG9ja0J5TGltaXROZXh0EhQucHJvdG9jb2wu",
            "QmxvY2tMaW1pdBoTLnByb3RvY29sLkJsb2NrTGlzdCJFgtPkkwI/Ihsvd2Fs",
            "bGV0L2dldGJsb2NrYnlsaW1pdG5leHQ6ASpaHRIbL3dhbGxldC9nZXRibG9j",
            "a2J5bGltaXRuZXh0EkwKFEdldEJsb2NrQnlMaW1pdE5leHQyEhQucHJvdG9j",
            "b2wuQmxvY2tMaW1pdBocLnByb3RvY29sLkJsb2NrTGlzdEV4dGVudGlvbiIA",
            "EooBChNHZXRCbG9ja0J5TGF0ZXN0TnVtEhcucHJvdG9jb2wuTnVtYmVyTWVz",
            "c2FnZRoTLnByb3RvY29sLkJsb2NrTGlzdCJFgtPkkwI/Ihsvd2FsbGV0L2dl",
            "dGJsb2NrYnlsYXRlc3RudW06ASpaHRIbL3dhbGxldC9nZXRibG9ja2J5bGF0",
            "ZXN0bnVtEk8KFEdldEJsb2NrQnlMYXRlc3ROdW0yEhcucHJvdG9jb2wuTnVt",
            "YmVyTWVzc2FnZRocLnByb3RvY29sLkJsb2NrTGlzdEV4dGVudGlvbiIAEogB",
            "ChJHZXRUcmFuc2FjdGlvbkJ5SWQSFi5wcm90b2NvbC5CeXRlc01lc3NhZ2Ua",
            "FS5wcm90b2NvbC5UcmFuc2FjdGlvbiJDgtPkkwI9Ihovd2FsbGV0L2dldHRy",
            "YW5zYWN0aW9uYnlpZDoBKlocEhovd2FsbGV0L2dldHRyYW5zYWN0aW9uYnlp",
            "ZBJRCg5EZXBsb3lDb250cmFjdBIdLnByb3RvY29sLkNyZWF0ZVNtYXJ0Q29u",
            "dHJhY3QaHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAEkAKC0dl",
            "dENvbnRyYWN0EhYucHJvdG9jb2wuQnl0ZXNNZXNzYWdlGhcucHJvdG9jb2wu",
            "U21hcnRDb250cmFjdCIAElMKD1RyaWdnZXJDb250cmFjdBIeLnByb3RvY29s",
            "LlRyaWdnZXJTbWFydENvbnRyYWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25F",
            "eHRlbnRpb24iABJ5Cg1MaXN0V2l0bmVzc2VzEhYucHJvdG9jb2wuRW1wdHlN",
            "ZXNzYWdlGhUucHJvdG9jb2wuV2l0bmVzc0xpc3QiOYLT5JMCMyIVL3dhbGxl",
            "dC9saXN0d2l0bmVzc2VzOgEqWhcSFS93YWxsZXQvbGlzdHdpdG5lc3NlcxKk",
            "AQoUR2V0RGVsZWdhdGVkUmVzb3VyY2USIi5wcm90b2NvbC5EZWxlZ2F0ZWRS",
            "ZXNvdXJjZU1lc3NhZ2UaHy5wcm90b2NvbC5EZWxlZ2F0ZWRSZXNvdXJjZUxp",
            "c3QiR4LT5JMCQSIcL3dhbGxldC9nZXRkZWxlZ2F0ZWRyZXNvdXJjZToBKloe",
            "Ehwvd2FsbGV0L2dldGRlbGVnYXRlZHJlc291cmNlEsQBCiBHZXREZWxlZ2F0",
            "ZWRSZXNvdXJjZUFjY291bnRJbmRleBIWLnByb3RvY29sLkJ5dGVzTWVzc2Fn",
            "ZRonLnByb3RvY29sLkRlbGVnYXRlZFJlc291cmNlQWNjb3VudEluZGV4Il+C",
            "0+STAlkiKC93YWxsZXQvZ2V0ZGVsZWdhdGVkcmVzb3VyY2VhY2NvdW50aW5k",
            "ZXg6ASpaKhIoL3dhbGxldC9nZXRkZWxlZ2F0ZWRyZXNvdXJjZWFjY291bnRp",
            "bmRleBJ6Cg1MaXN0UHJvcG9zYWxzEhYucHJvdG9jb2wuRW1wdHlNZXNzYWdl",
            "GhYucHJvdG9jb2wuUHJvcG9zYWxMaXN0IjmC0+STAjMiFS93YWxsZXQvbGlz",
            "dHByb3Bvc2FsczoBKloXEhUvd2FsbGV0L2xpc3Rwcm9wb3NhbHMSnwEKGEdl",
            "dFBhZ2luYXRlZFByb3Bvc2FsTGlzdBIaLnByb3RvY29sLlBhZ2luYXRlZE1l",
            "c3NhZ2UaFi5wcm90b2NvbC5Qcm9wb3NhbExpc3QiT4LT5JMCSSIgL3dhbGxl",
            "dC9nZXRwYWdpbmF0ZWRwcm9wb3NhbGxpc3Q6ASpaIhIgL3dhbGxldC9nZXRw",
            "YWdpbmF0ZWRwcm9wb3NhbGxpc3QSfAoPR2V0UHJvcG9zYWxCeUlkEhYucHJv",
            "dG9jb2wuQnl0ZXNNZXNzYWdlGhIucHJvdG9jb2wuUHJvcG9zYWwiPYLT5JMC",
            "NyIXL3dhbGxldC9nZXRwcm9wb3NhbGJ5aWQ6ASpaGRIXL3dhbGxldC9nZXRw",
            "cm9wb3NhbGJ5aWQSegoNTGlzdEV4Y2hhbmdlcxIWLnByb3RvY29sLkVtcHR5",
            "TWVzc2FnZRoWLnByb3RvY29sLkV4Y2hhbmdlTGlzdCI5gtPkkwIzIhUvd2Fs",
            "bGV0L2xpc3RleGNoYW5nZXM6ASpaFxIVL3dhbGxldC9saXN0ZXhjaGFuZ2Vz",
            "Ep8BChhHZXRQYWdpbmF0ZWRFeGNoYW5nZUxpc3QSGi5wcm90b2NvbC5QYWdp",
            "bmF0ZWRNZXNzYWdlGhYucHJvdG9jb2wuRXhjaGFuZ2VMaXN0Ik+C0+STAkki",
            "IC93YWxsZXQvZ2V0cGFnaW5hdGVkZXhjaGFuZ2VsaXN0OgEqWiISIC93YWxs",
            "ZXQvZ2V0cGFnaW5hdGVkZXhjaGFuZ2VsaXN0EnwKD0dldEV4Y2hhbmdlQnlJ",
            "ZBIWLnByb3RvY29sLkJ5dGVzTWVzc2FnZRoSLnByb3RvY29sLkV4Y2hhbmdl",
            "Ij2C0+STAjciFy93YWxsZXQvZ2V0ZXhjaGFuZ2VieWlkOgEqWhkSFy93YWxs",
            "ZXQvZ2V0ZXhjaGFuZ2VieWlkEowBChJHZXRDaGFpblBhcmFtZXRlcnMSFi5w",
            "cm90b2NvbC5FbXB0eU1lc3NhZ2UaGS5wcm90b2NvbC5DaGFpblBhcmFtZXRl",
            "cnMiQ4LT5JMCPSIaL3dhbGxldC9nZXRjaGFpbnBhcmFtZXRlcnM6ASpaHBIa",
            "L3dhbGxldC9nZXRjaGFpbnBhcmFtZXRlcnMSiAEKEUdldEFzc2V0SXNzdWVM",
            "aXN0EhYucHJvdG9jb2wuRW1wdHlNZXNzYWdlGhgucHJvdG9jb2wuQXNzZXRJ",
            "c3N1ZUxpc3QiQYLT5JMCOyIZL3dhbGxldC9nZXRhc3NldGlzc3VlbGlzdDoB",
            "KlobEhkvd2FsbGV0L2dldGFzc2V0aXNzdWVsaXN0EqcBChpHZXRQYWdpbmF0",
            "ZWRBc3NldElzc3VlTGlzdBIaLnByb3RvY29sLlBhZ2luYXRlZE1lc3NhZ2Ua",
            "GC5wcm90b2NvbC5Bc3NldElzc3VlTGlzdCJTgtPkkwJNIiIvd2FsbGV0L2dl",
            "dHBhZ2luYXRlZGFzc2V0aXNzdWVsaXN0OgEqWiQSIi93YWxsZXQvZ2V0cGFn",
            "aW5hdGVkYXNzZXRpc3N1ZWxpc3QShAEKEFRvdGFsVHJhbnNhY3Rpb24SFi5w",
            "cm90b2NvbC5FbXB0eU1lc3NhZ2UaFy5wcm90b2NvbC5OdW1iZXJNZXNzYWdl",
            "Ij+C0+STAjkiGC93YWxsZXQvdG90YWx0cmFuc2FjdGlvbjoBKloaEhgvd2Fs",
            "bGV0L3RvdGFsdHJhbnNhY3Rpb24SlgEKFkdldE5leHRNYWludGVuYW5jZVRp",
            "bWUSFi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaFy5wcm90b2NvbC5OdW1iZXJN",
            "ZXNzYWdlIkuC0+STAkUiHi93YWxsZXQvZ2V0bmV4dG1haW50ZW5hbmNldGlt",
            "ZToBKlogEh4vd2FsbGV0L2dldG5leHRtYWludGVuYW5jZXRpbWUSiwEKEkdl",
            "dFRyYW5zYWN0aW9uU2lnbhIZLnByb3RvY29sLlRyYW5zYWN0aW9uU2lnbhoV",
            "LnByb3RvY29sLlRyYW5zYWN0aW9uIkOC0+STAj0iGi93YWxsZXQvZ2V0dHJh",
            "bnNhY3Rpb25zaWduOgEqWhwSGi93YWxsZXQvZ2V0dHJhbnNhY3Rpb25zaWdu",
            "ElIKE0dldFRyYW5zYWN0aW9uU2lnbjISGS5wcm90b2NvbC5UcmFuc2FjdGlv",
            "blNpZ24aHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAEnoKDUNy",
            "ZWF0ZUFkZHJlc3MSFi5wcm90b2NvbC5CeXRlc01lc3NhZ2UaFi5wcm90b2Nv",
            "bC5CeXRlc01lc3NhZ2UiOYLT5JMCMyIVL3dhbGxldC9jcmVhdGVhZGRyZXNz",
            "OgEqWhcSFS93YWxsZXQvY3JlYXRlYWRkcmVzcxKGAQoMRWFzeVRyYW5zZmVy",
            "Eh0ucHJvdG9jb2wuRWFzeVRyYW5zZmVyTWVzc2FnZRoeLnByb3RvY29sLkVh",
            "c3lUcmFuc2ZlclJlc3BvbnNlIjeC0+STAjEiFC93YWxsZXQvZWFzeXRyYW5z",
            "ZmVyOgEqWhYSFC93YWxsZXQvZWFzeXRyYW5zZmVyEqoBChVFYXN5VHJhbnNm",
            "ZXJCeVByaXZhdGUSJi5wcm90b2NvbC5FYXN5VHJhbnNmZXJCeVByaXZhdGVN",
            "ZXNzYWdlGh4ucHJvdG9jb2wuRWFzeVRyYW5zZmVyUmVzcG9uc2UiSYLT5JMC",
            "QyIdL3dhbGxldC9lYXN5dHJhbnNmZXJieXByaXZhdGU6ASpaHxIdL3dhbGxl",
            "dC9lYXN5dHJhbnNmZXJieXByaXZhdGUSiwEKD0dlbmVyYXRlQWRkcmVzcxIW",
            "LnByb3RvY29sLkVtcHR5TWVzc2FnZRohLnByb3RvY29sLkFkZHJlc3NQcktl",
            "eVBhaXJNZXNzYWdlIj2C0+STAjciFy93YWxsZXQvZ2VuZXJhdGVhZGRyZXNz",
            "OgEqWhkSFy93YWxsZXQvZ2VuZXJhdGVhZGRyZXNzEpgBChZHZXRUcmFuc2Fj",
            "dGlvbkluZm9CeUlkEhYucHJvdG9jb2wuQnl0ZXNNZXNzYWdlGhkucHJvdG9j",
            "b2wuVHJhbnNhY3Rpb25JbmZvIkuC0+STAkUiHi93YWxsZXQvZ2V0dHJhbnNh",
            "Y3Rpb25pbmZvYnlpZDoBKlogEh4vd2FsbGV0L2dldHRyYW5zYWN0aW9uaW5m",
            "b2J5aWQyhBAKDldhbGxldFNvbGlkaXR5EncKCkdldEFjY291bnQSES5wcm90",
            "b2NvbC5BY2NvdW50GhEucHJvdG9jb2wuQWNjb3VudCJDgtPkkwI9Ihovd2Fs",
            "bGV0c29saWRpdHkvZ2V0YWNjb3VudDoBKlocEhovd2FsbGV0c29saWRpdHkv",
            "Z2V0YWNjb3VudBKDAQoOR2V0QWNjb3VudEJ5SWQSES5wcm90b2NvbC5BY2Nv",
            "dW50GhEucHJvdG9jb2wuQWNjb3VudCJLgtPkkwJFIh4vd2FsbGV0c29saWRp",
            "dHkvZ2V0YWNjb3VudGJ5aWQ6ASpaIBIeL3dhbGxldHNvbGlkaXR5L2dldGFj",
            "Y291bnRieWlkEokBCg1MaXN0V2l0bmVzc2VzEhYucHJvdG9jb2wuRW1wdHlN",
            "ZXNzYWdlGhUucHJvdG9jb2wuV2l0bmVzc0xpc3QiSYLT5JMCQyIdL3dhbGxl",
            "dHNvbGlkaXR5L2xpc3R3aXRuZXNzZXM6ASpaHxIdL3dhbGxldHNvbGlkaXR5",
            "L2xpc3R3aXRuZXNzZXMSmAEKEUdldEFzc2V0SXNzdWVMaXN0EhYucHJvdG9j",
            "b2wuRW1wdHlNZXNzYWdlGhgucHJvdG9jb2wuQXNzZXRJc3N1ZUxpc3QiUYLT",
            "5JMCSyIhL3dhbGxldHNvbGlkaXR5L2dldGFzc2V0aXNzdWVsaXN0OgEqWiMS",
            "IS93YWxsZXRzb2xpZGl0eS9nZXRhc3NldGlzc3VlbGlzdBK3AQoaR2V0UGFn",
            "aW5hdGVkQXNzZXRJc3N1ZUxpc3QSGi5wcm90b2NvbC5QYWdpbmF0ZWRNZXNz",
            "YWdlGhgucHJvdG9jb2wuQXNzZXRJc3N1ZUxpc3QiY4LT5JMCXSIqL3dhbGxl",
            "dHNvbGlkaXR5L2dldHBhZ2luYXRlZGFzc2V0aXNzdWVsaXN0OgEqWiwSKi93",
            "YWxsZXRzb2xpZGl0eS9nZXRwYWdpbmF0ZWRhc3NldGlzc3VlbGlzdBJ9CgtH",
            "ZXROb3dCbG9jaxIWLnByb3RvY29sLkVtcHR5TWVzc2FnZRoPLnByb3RvY29s",
            "LkJsb2NrIkWC0+STAj8iGy93YWxsZXRzb2xpZGl0eS9nZXRub3dibG9jazoB",
            "KlodEhsvd2FsbGV0c29saWRpdHkvZ2V0bm93YmxvY2sSQgoMR2V0Tm93Qmxv",
            "Y2syEhYucHJvdG9jb2wuRW1wdHlNZXNzYWdlGhgucHJvdG9jb2wuQmxvY2tF",
            "eHRlbnRpb24iABKEAQoNR2V0QmxvY2tCeU51bRIXLnByb3RvY29sLk51bWJl",
            "ck1lc3NhZ2UaDy5wcm90b2NvbC5CbG9jayJJgtPkkwJDIh0vd2FsbGV0c29s",
            "aWRpdHkvZ2V0YmxvY2tieW51bToBKlofEh0vd2FsbGV0c29saWRpdHkvZ2V0",
            "YmxvY2tieW51bRJFCg5HZXRCbG9ja0J5TnVtMhIXLnByb3RvY29sLk51bWJl",
            "ck1lc3NhZ2UaGC5wcm90b2NvbC5CbG9ja0V4dGVudGlvbiIAElMKHUdldFRy",
            "YW5zYWN0aW9uQ291bnRCeUJsb2NrTnVtEhcucHJvdG9jb2wuTnVtYmVyTWVz",
            "c2FnZRoXLnByb3RvY29sLk51bWJlck1lc3NhZ2UiABJdChRHZXREZWxlZ2F0",
            "ZWRSZXNvdXJjZRIiLnByb3RvY29sLkRlbGVnYXRlZFJlc291cmNlTWVzc2Fn",
            "ZRofLnByb3RvY29sLkRlbGVnYXRlZFJlc291cmNlTGlzdCIAEmUKIEdldERl",
            "bGVnYXRlZFJlc291cmNlQWNjb3VudEluZGV4EhYucHJvdG9jb2wuQnl0ZXNN",
            "ZXNzYWdlGicucHJvdG9jb2wuRGVsZWdhdGVkUmVzb3VyY2VBY2NvdW50SW5k",
            "ZXgiABI/Cg9HZXRFeGNoYW5nZUJ5SWQSFi5wcm90b2NvbC5CeXRlc01lc3Nh",
            "Z2UaEi5wcm90b2NvbC5FeGNoYW5nZSIAEkEKDUxpc3RFeGNoYW5nZXMSFi5w",
            "cm90b2NvbC5FbXB0eU1lc3NhZ2UaFi5wcm90b2NvbC5FeGNoYW5nZUxpc3Qi",
            "ABKYAQoSR2V0VHJhbnNhY3Rpb25CeUlkEhYucHJvdG9jb2wuQnl0ZXNNZXNz",
            "YWdlGhUucHJvdG9jb2wuVHJhbnNhY3Rpb24iU4LT5JMCTSIiL3dhbGxldHNv",
            "bGlkaXR5L2dldHRyYW5zYWN0aW9uYnlpZDoBKlokEiIvd2FsbGV0c29saWRp",
            "dHkvZ2V0dHJhbnNhY3Rpb25ieWlkEqgBChZHZXRUcmFuc2FjdGlvbkluZm9C",
            "eUlkEhYucHJvdG9jb2wuQnl0ZXNNZXNzYWdlGhkucHJvdG9jb2wuVHJhbnNh",
            "Y3Rpb25JbmZvIluC0+STAlUiJi93YWxsZXRzb2xpZGl0eS9nZXR0cmFuc2Fj",
            "dGlvbmluZm9ieWlkOgEqWigSJi93YWxsZXRzb2xpZGl0eS9nZXR0cmFuc2Fj",
            "dGlvbmluZm9ieWlkEpsBCg9HZW5lcmF0ZUFkZHJlc3MSFi5wcm90b2NvbC5F",
            "bXB0eU1lc3NhZ2UaIS5wcm90b2NvbC5BZGRyZXNzUHJLZXlQYWlyTWVzc2Fn",
            "ZSJNgtPkkwJHIh8vd2FsbGV0c29saWRpdHkvZ2VuZXJhdGVhZGRyZXNzOgEq",
            "WiESHy93YWxsZXRzb2xpZGl0eS9nZW5lcmF0ZWFkZHJlc3MyrQQKD1dhbGxl",
            "dEV4dGVuc2lvbhKxAQoXR2V0VHJhbnNhY3Rpb25zRnJvbVRoaXMSGi5wcm90",
            "b2NvbC5BY2NvdW50UGFnaW5hdGVkGhkucHJvdG9jb2wuVHJhbnNhY3Rpb25M",
            "aXN0Il+C0+STAlkiKC93YWxsZXRleHRlbnNpb24vZ2V0dHJhbnNhY3Rpb25z",
            "ZnJvbXRoaXM6ASpaKhIoL3dhbGxldGV4dGVuc2lvbi9nZXR0cmFuc2FjdGlv",
            "bnNmcm9tdGhpcxJcChhHZXRUcmFuc2FjdGlvbnNGcm9tVGhpczISGi5wcm90",
            "b2NvbC5BY2NvdW50UGFnaW5hdGVkGiIucHJvdG9jb2wuVHJhbnNhY3Rpb25M",
            "aXN0RXh0ZW50aW9uIgASqwEKFUdldFRyYW5zYWN0aW9uc1RvVGhpcxIaLnBy",
            "b3RvY29sLkFjY291bnRQYWdpbmF0ZWQaGS5wcm90b2NvbC5UcmFuc2FjdGlv",
            "bkxpc3QiW4LT5JMCVSImL3dhbGxldGV4dGVuc2lvbi9nZXR0cmFuc2FjdGlv",
            "bnN0b3RoaXM6ASpaKBImL3dhbGxldGV4dGVuc2lvbi9nZXR0cmFuc2FjdGlv",
            "bnN0b3RoaXMSWgoWR2V0VHJhbnNhY3Rpb25zVG9UaGlzMhIaLnByb3RvY29s",
            "LkFjY291bnRQYWdpbmF0ZWQaIi5wcm90b2NvbC5UcmFuc2FjdGlvbkxpc3RF",
            "eHRlbnRpb24iADKZAgoIRGF0YWJhc2USRwoRZ2V0QmxvY2tSZWZlcmVuY2US",
            "Fi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaGC5wcm90b2NvbC5CbG9ja1JlZmVy",
            "ZW5jZSIAEk0KFEdldER5bmFtaWNQcm9wZXJ0aWVzEhYucHJvdG9jb2wuRW1w",
            "dHlNZXNzYWdlGhsucHJvdG9jb2wuRHluYW1pY1Byb3BlcnRpZXMiABI4CgtH",
            "ZXROb3dCbG9jaxIWLnByb3RvY29sLkVtcHR5TWVzc2FnZRoPLnByb3RvY29s",
            "LkJsb2NrIgASOwoNR2V0QmxvY2tCeU51bRIXLnByb3RvY29sLk51bWJlck1l",
            "c3NhZ2UaDy5wcm90b2NvbC5CbG9jayIAMgkKB05ldHdvcmtCQQoMb3JnLnRy",
            "b24uYXBpQgdHcnBjQVBJWihnaXRodWIuY29tL3Ryb25wcm90b2NvbC9ncnBj",
            "LWdhdGV3YXkvYXBpYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protocol.TronReflection.Descriptor, global::Protocol.ContractReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Return), global::Protocol.Return.Parser, new[]{ "Result", "Code", "Message" }, null, new[]{ typeof(global::Protocol.Return.Types.response_code) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.BlockReference), global::Protocol.BlockReference.Parser, new[]{ "BlockNum", "BlockHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.WitnessList), global::Protocol.WitnessList.Parser, new[]{ "Witnesses" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.ProposalList), global::Protocol.ProposalList.Parser, new[]{ "Proposals" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.ExchangeList), global::Protocol.ExchangeList.Parser, new[]{ "Exchanges" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.AssetIssueList), global::Protocol.AssetIssueList.Parser, new[]{ "AssetIssue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.BlockList), global::Protocol.BlockList.Parser, new[]{ "Block" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TransactionList), global::Protocol.TransactionList.Parser, new[]{ "Transaction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.DelegatedResourceMessage), global::Protocol.DelegatedResourceMessage.Parser, new[]{ "FromAddress", "ToAddress" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.DelegatedResourceList), global::Protocol.DelegatedResourceList.Parser, new[]{ "DelegatedResource" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.NodeList), global::Protocol.NodeList.Parser, new[]{ "Nodes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Node), global::Protocol.Node.Parser, new[]{ "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Address), global::Protocol.Address.Parser, new[]{ "Host", "Port" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.EmptyMessage), global::Protocol.EmptyMessage.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.NumberMessage), global::Protocol.NumberMessage.Parser, new[]{ "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.BytesMessage), global::Protocol.BytesMessage.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TimeMessage), global::Protocol.TimeMessage.Parser, new[]{ "BeginInMilliseconds", "EndInMilliseconds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.BlockLimit), global::Protocol.BlockLimit.Parser, new[]{ "StartNum", "EndNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TransactionLimit), global::Protocol.TransactionLimit.Parser, new[]{ "TransactionId", "LimitNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.AccountPaginated), global::Protocol.AccountPaginated.Parser, new[]{ "Account", "Offset", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TimePaginatedMessage), global::Protocol.TimePaginatedMessage.Parser, new[]{ "TimeMessage", "Offset", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.AccountNetMessage), global::Protocol.AccountNetMessage.Parser, new[]{ "FreeNetUsed", "FreeNetLimit", "NetUsed", "NetLimit", "AssetNetUsed", "AssetNetLimit", "TotalNetLimit", "TotalNetWeight" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.AccountResourceMessage), global::Protocol.AccountResourceMessage.Parser, new[]{ "FreeNetUsed", "FreeNetLimit", "NetUsed", "NetLimit", "AssetNetUsed", "AssetNetLimit", "TotalNetLimit", "TotalNetWeight", "EnergyUsed", "EnergyLimit", "TotalEnergyLimit", "TotalEnergyWeight", "StorageUsed", "StorageLimit" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.PaginatedMessage), global::Protocol.PaginatedMessage.Parser, new[]{ "Offset", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.EasyTransferMessage), global::Protocol.EasyTransferMessage.Parser, new[]{ "PassPhrase", "ToAddress", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.EasyTransferByPrivateMessage), global::Protocol.EasyTransferByPrivateMessage.Parser, new[]{ "PrivateKey", "ToAddress", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.EasyTransferResponse), global::Protocol.EasyTransferResponse.Parser, new[]{ "Transaction", "Result", "Txid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.AddressPrKeyPairMessage), global::Protocol.AddressPrKeyPairMessage.Parser, new[]{ "Address", "PrivateKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TransactionExtention), global::Protocol.TransactionExtention.Parser, new[]{ "Transaction", "Txid", "ConstantResult", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.BlockExtention), global::Protocol.BlockExtention.Parser, new[]{ "Transactions", "BlockHeader", "Blockid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.BlockListExtention), global::Protocol.BlockListExtention.Parser, new[]{ "Block" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.TransactionListExtention), global::Protocol.TransactionListExtention.Parser, new[]{ "Transaction" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Return : pb::IMessage<Return> {
    private static readonly pb::MessageParser<Return> _parser = new pb::MessageParser<Return>(() => new Return());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Return> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Return() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Return(Return other) : this() {
      result_ = other.result_;
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Return Clone() {
      return new Return(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private global::Protocol.Return.Types.response_code code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Return.Types.response_code Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private pb::ByteString message_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Return);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Return other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Return other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
          case 16: {
            code_ = (global::Protocol.Return.Types.response_code) input.ReadEnum();
            break;
          }
          case 26: {
            Message = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Return message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum response_code {
        [pbr::OriginalName("SUCCESS")] Success = 0,
        /// <summary>
        /// error in signature
        /// </summary>
        [pbr::OriginalName("SIGERROR")] Sigerror = 1,
        [pbr::OriginalName("CONTRACT_VALIDATE_ERROR")] ContractValidateError = 2,
        [pbr::OriginalName("CONTRACT_EXE_ERROR")] ContractExeError = 3,
        [pbr::OriginalName("BANDWITH_ERROR")] BandwithError = 4,
        [pbr::OriginalName("DUP_TRANSACTION_ERROR")] DupTransactionError = 5,
        [pbr::OriginalName("TAPOS_ERROR")] TaposError = 6,
        [pbr::OriginalName("TOO_BIG_TRANSACTION_ERROR")] TooBigTransactionError = 7,
        [pbr::OriginalName("TRANSACTION_EXPIRATION_ERROR")] TransactionExpirationError = 8,
        [pbr::OriginalName("SERVER_BUSY")] ServerBusy = 9,
        [pbr::OriginalName("OTHER_ERROR")] OtherError = 20,
      }

    }
    #endregion

  }

  public sealed partial class BlockReference : pb::IMessage<BlockReference> {
    private static readonly pb::MessageParser<BlockReference> _parser = new pb::MessageParser<BlockReference>(() => new BlockReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReference(BlockReference other) : this() {
      blockNum_ = other.blockNum_;
      blockHash_ = other.blockHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReference Clone() {
      return new BlockReference(this);
    }

    /// <summary>Field number for the "block_num" field.</summary>
    public const int BlockNumFieldNumber = 1;
    private long blockNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BlockNum {
      get { return blockNum_; }
      set {
        blockNum_ = value;
      }
    }

    /// <summary>Field number for the "block_hash" field.</summary>
    public const int BlockHashFieldNumber = 2;
    private pb::ByteString blockHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BlockHash {
      get { return blockHash_; }
      set {
        blockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlockNum != other.BlockNum) return false;
      if (BlockHash != other.BlockHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BlockNum != 0L) hash ^= BlockNum.GetHashCode();
      if (BlockHash.Length != 0) hash ^= BlockHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BlockNum != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BlockNum);
      }
      if (BlockHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(BlockHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BlockNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockNum);
      }
      if (BlockHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BlockHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockReference other) {
      if (other == null) {
        return;
      }
      if (other.BlockNum != 0L) {
        BlockNum = other.BlockNum;
      }
      if (other.BlockHash.Length != 0) {
        BlockHash = other.BlockHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlockNum = input.ReadInt64();
            break;
          }
          case 18: {
            BlockHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WitnessList : pb::IMessage<WitnessList> {
    private static readonly pb::MessageParser<WitnessList> _parser = new pb::MessageParser<WitnessList>(() => new WitnessList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WitnessList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessList(WitnessList other) : this() {
      witnesses_ = other.witnesses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessList Clone() {
      return new WitnessList(this);
    }

    /// <summary>Field number for the "witnesses" field.</summary>
    public const int WitnessesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.Witness> _repeated_witnesses_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.Witness.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Witness> witnesses_ = new pbc::RepeatedField<global::Protocol.Witness>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Witness> Witnesses {
      get { return witnesses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WitnessList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WitnessList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!witnesses_.Equals(other.witnesses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= witnesses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      witnesses_.WriteTo(output, _repeated_witnesses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += witnesses_.CalculateSize(_repeated_witnesses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WitnessList other) {
      if (other == null) {
        return;
      }
      witnesses_.Add(other.witnesses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            witnesses_.AddEntriesFrom(input, _repeated_witnesses_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProposalList : pb::IMessage<ProposalList> {
    private static readonly pb::MessageParser<ProposalList> _parser = new pb::MessageParser<ProposalList>(() => new ProposalList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProposalList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalList(ProposalList other) : this() {
      proposals_ = other.proposals_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalList Clone() {
      return new ProposalList(this);
    }

    /// <summary>Field number for the "proposals" field.</summary>
    public const int ProposalsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.Proposal> _repeated_proposals_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.Proposal.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Proposal> proposals_ = new pbc::RepeatedField<global::Protocol.Proposal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Proposal> Proposals {
      get { return proposals_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProposalList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProposalList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!proposals_.Equals(other.proposals_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= proposals_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      proposals_.WriteTo(output, _repeated_proposals_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += proposals_.CalculateSize(_repeated_proposals_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProposalList other) {
      if (other == null) {
        return;
      }
      proposals_.Add(other.proposals_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            proposals_.AddEntriesFrom(input, _repeated_proposals_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExchangeList : pb::IMessage<ExchangeList> {
    private static readonly pb::MessageParser<ExchangeList> _parser = new pb::MessageParser<ExchangeList>(() => new ExchangeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeList(ExchangeList other) : this() {
      exchanges_ = other.exchanges_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeList Clone() {
      return new ExchangeList(this);
    }

    /// <summary>Field number for the "exchanges" field.</summary>
    public const int ExchangesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.Exchange> _repeated_exchanges_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.Exchange.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Exchange> exchanges_ = new pbc::RepeatedField<global::Protocol.Exchange>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Exchange> Exchanges {
      get { return exchanges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!exchanges_.Equals(other.exchanges_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= exchanges_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      exchanges_.WriteTo(output, _repeated_exchanges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += exchanges_.CalculateSize(_repeated_exchanges_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeList other) {
      if (other == null) {
        return;
      }
      exchanges_.Add(other.exchanges_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            exchanges_.AddEntriesFrom(input, _repeated_exchanges_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssetIssueList : pb::IMessage<AssetIssueList> {
    private static readonly pb::MessageParser<AssetIssueList> _parser = new pb::MessageParser<AssetIssueList>(() => new AssetIssueList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssetIssueList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueList(AssetIssueList other) : this() {
      assetIssue_ = other.assetIssue_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueList Clone() {
      return new AssetIssueList(this);
    }

    /// <summary>Field number for the "assetIssue" field.</summary>
    public const int AssetIssueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.AssetIssueContract> _repeated_assetIssue_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.AssetIssueContract.Parser);
    private readonly pbc::RepeatedField<global::Protocol.AssetIssueContract> assetIssue_ = new pbc::RepeatedField<global::Protocol.AssetIssueContract>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.AssetIssueContract> AssetIssue {
      get { return assetIssue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssetIssueList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssetIssueList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!assetIssue_.Equals(other.assetIssue_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= assetIssue_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      assetIssue_.WriteTo(output, _repeated_assetIssue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += assetIssue_.CalculateSize(_repeated_assetIssue_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssetIssueList other) {
      if (other == null) {
        return;
      }
      assetIssue_.Add(other.assetIssue_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            assetIssue_.AddEntriesFrom(input, _repeated_assetIssue_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockList : pb::IMessage<BlockList> {
    private static readonly pb::MessageParser<BlockList> _parser = new pb::MessageParser<BlockList>(() => new BlockList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList(BlockList other) : this() {
      block_ = other.block_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList Clone() {
      return new BlockList(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.Block> _repeated_block_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.Block.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Block> block_ = new pbc::RepeatedField<global::Protocol.Block>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Block> Block {
      get { return block_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!block_.Equals(other.block_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= block_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      block_.WriteTo(output, _repeated_block_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += block_.CalculateSize(_repeated_block_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockList other) {
      if (other == null) {
        return;
      }
      block_.Add(other.block_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            block_.AddEntriesFrom(input, _repeated_block_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionList : pb::IMessage<TransactionList> {
    private static readonly pb::MessageParser<TransactionList> _parser = new pb::MessageParser<TransactionList>(() => new TransactionList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionList(TransactionList other) : this() {
      transaction_ = other.transaction_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionList Clone() {
      return new TransactionList(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.Transaction> _repeated_transaction_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.Transaction.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Transaction> transaction_ = new pbc::RepeatedField<global::Protocol.Transaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Transaction> Transaction {
      get { return transaction_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transaction_.Equals(other.transaction_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transaction_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transaction_.WriteTo(output, _repeated_transaction_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transaction_.CalculateSize(_repeated_transaction_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionList other) {
      if (other == null) {
        return;
      }
      transaction_.Add(other.transaction_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transaction_.AddEntriesFrom(input, _repeated_transaction_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegatedResourceMessage : pb::IMessage<DelegatedResourceMessage> {
    private static readonly pb::MessageParser<DelegatedResourceMessage> _parser = new pb::MessageParser<DelegatedResourceMessage>(() => new DelegatedResourceMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegatedResourceMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceMessage(DelegatedResourceMessage other) : this() {
      fromAddress_ = other.fromAddress_;
      toAddress_ = other.toAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceMessage Clone() {
      return new DelegatedResourceMessage(this);
    }

    /// <summary>Field number for the "fromAddress" field.</summary>
    public const int FromAddressFieldNumber = 1;
    private pb::ByteString fromAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FromAddress {
      get { return fromAddress_; }
      set {
        fromAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toAddress" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegatedResourceMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegatedResourceMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromAddress != other.FromAddress) return false;
      if (ToAddress != other.ToAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromAddress.Length != 0) hash ^= FromAddress.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(FromAddress);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FromAddress);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegatedResourceMessage other) {
      if (other == null) {
        return;
      }
      if (other.FromAddress.Length != 0) {
        FromAddress = other.FromAddress;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FromAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegatedResourceList : pb::IMessage<DelegatedResourceList> {
    private static readonly pb::MessageParser<DelegatedResourceList> _parser = new pb::MessageParser<DelegatedResourceList>(() => new DelegatedResourceList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegatedResourceList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceList(DelegatedResourceList other) : this() {
      delegatedResource_ = other.delegatedResource_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceList Clone() {
      return new DelegatedResourceList(this);
    }

    /// <summary>Field number for the "delegatedResource" field.</summary>
    public const int DelegatedResourceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.DelegatedResource> _repeated_delegatedResource_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.DelegatedResource.Parser);
    private readonly pbc::RepeatedField<global::Protocol.DelegatedResource> delegatedResource_ = new pbc::RepeatedField<global::Protocol.DelegatedResource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.DelegatedResource> DelegatedResource {
      get { return delegatedResource_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegatedResourceList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegatedResourceList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!delegatedResource_.Equals(other.delegatedResource_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= delegatedResource_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      delegatedResource_.WriteTo(output, _repeated_delegatedResource_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += delegatedResource_.CalculateSize(_repeated_delegatedResource_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegatedResourceList other) {
      if (other == null) {
        return;
      }
      delegatedResource_.Add(other.delegatedResource_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            delegatedResource_.AddEntriesFrom(input, _repeated_delegatedResource_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gossip node list
  /// </summary>
  public sealed partial class NodeList : pb::IMessage<NodeList> {
    private static readonly pb::MessageParser<NodeList> _parser = new pb::MessageParser<NodeList>(() => new NodeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList(NodeList other) : this() {
      nodes_ = other.nodes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList Clone() {
      return new NodeList(this);
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.Node> _repeated_nodes_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.Node.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Node> nodes_ = new pbc::RepeatedField<global::Protocol.Node>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Node> Nodes {
      get { return nodes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodes_.Equals(other.nodes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodes_.WriteTo(output, _repeated_nodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeList other) {
      if (other == null) {
        return;
      }
      nodes_.Add(other.nodes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gossip node
  /// </summary>
  public sealed partial class Node : pb::IMessage<Node> {
    private static readonly pb::MessageParser<Node> _parser = new pb::MessageParser<Node>(() => new Node());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Node> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node(Node other) : this() {
      Address = other.address_ != null ? other.Address.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node Clone() {
      return new Node(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::Protocol.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Node);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Node other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Node other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          address_ = new global::Protocol.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              address_ = new global::Protocol.Address();
            }
            input.ReadMessage(address_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gossip node address
  /// </summary>
  public sealed partial class Address : pb::IMessage<Address> {
    private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Address> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address(Address other) : this() {
      host_ = other.host_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address Clone() {
      return new Address(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private pb::ByteString host_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Address);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Address other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Host.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Host);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Address other) {
      if (other == null) {
        return;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadBytes();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmptyMessage : pb::IMessage<EmptyMessage> {
    private static readonly pb::MessageParser<EmptyMessage> _parser = new pb::MessageParser<EmptyMessage>(() => new EmptyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmptyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage(EmptyMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage Clone() {
      return new EmptyMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmptyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmptyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmptyMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NumberMessage : pb::IMessage<NumberMessage> {
    private static readonly pb::MessageParser<NumberMessage> _parser = new pb::MessageParser<NumberMessage>(() => new NumberMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NumberMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberMessage(NumberMessage other) : this() {
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberMessage Clone() {
      return new NumberMessage(this);
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 1;
    private long num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NumberMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NumberMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Num != 0L) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Num != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Num != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NumberMessage other) {
      if (other == null) {
        return;
      }
      if (other.Num != 0L) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Num = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BytesMessage : pb::IMessage<BytesMessage> {
    private static readonly pb::MessageParser<BytesMessage> _parser = new pb::MessageParser<BytesMessage>(() => new BytesMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BytesMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BytesMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BytesMessage(BytesMessage other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BytesMessage Clone() {
      return new BytesMessage(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BytesMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BytesMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BytesMessage other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TimeMessage : pb::IMessage<TimeMessage> {
    private static readonly pb::MessageParser<TimeMessage> _parser = new pb::MessageParser<TimeMessage>(() => new TimeMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeMessage(TimeMessage other) : this() {
      beginInMilliseconds_ = other.beginInMilliseconds_;
      endInMilliseconds_ = other.endInMilliseconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeMessage Clone() {
      return new TimeMessage(this);
    }

    /// <summary>Field number for the "beginInMilliseconds" field.</summary>
    public const int BeginInMillisecondsFieldNumber = 1;
    private long beginInMilliseconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BeginInMilliseconds {
      get { return beginInMilliseconds_; }
      set {
        beginInMilliseconds_ = value;
      }
    }

    /// <summary>Field number for the "endInMilliseconds" field.</summary>
    public const int EndInMillisecondsFieldNumber = 2;
    private long endInMilliseconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndInMilliseconds {
      get { return endInMilliseconds_; }
      set {
        endInMilliseconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BeginInMilliseconds != other.BeginInMilliseconds) return false;
      if (EndInMilliseconds != other.EndInMilliseconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BeginInMilliseconds != 0L) hash ^= BeginInMilliseconds.GetHashCode();
      if (EndInMilliseconds != 0L) hash ^= EndInMilliseconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BeginInMilliseconds != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BeginInMilliseconds);
      }
      if (EndInMilliseconds != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndInMilliseconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BeginInMilliseconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BeginInMilliseconds);
      }
      if (EndInMilliseconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndInMilliseconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeMessage other) {
      if (other == null) {
        return;
      }
      if (other.BeginInMilliseconds != 0L) {
        BeginInMilliseconds = other.BeginInMilliseconds;
      }
      if (other.EndInMilliseconds != 0L) {
        EndInMilliseconds = other.EndInMilliseconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BeginInMilliseconds = input.ReadInt64();
            break;
          }
          case 16: {
            EndInMilliseconds = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockLimit : pb::IMessage<BlockLimit> {
    private static readonly pb::MessageParser<BlockLimit> _parser = new pb::MessageParser<BlockLimit>(() => new BlockLimit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLimit(BlockLimit other) : this() {
      startNum_ = other.startNum_;
      endNum_ = other.endNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLimit Clone() {
      return new BlockLimit(this);
    }

    /// <summary>Field number for the "startNum" field.</summary>
    public const int StartNumFieldNumber = 1;
    private long startNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartNum {
      get { return startNum_; }
      set {
        startNum_ = value;
      }
    }

    /// <summary>Field number for the "endNum" field.</summary>
    public const int EndNumFieldNumber = 2;
    private long endNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndNum {
      get { return endNum_; }
      set {
        endNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartNum != other.StartNum) return false;
      if (EndNum != other.EndNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartNum != 0L) hash ^= StartNum.GetHashCode();
      if (EndNum != 0L) hash ^= EndNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartNum != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartNum);
      }
      if (EndNum != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartNum);
      }
      if (EndNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockLimit other) {
      if (other == null) {
        return;
      }
      if (other.StartNum != 0L) {
        StartNum = other.StartNum;
      }
      if (other.EndNum != 0L) {
        EndNum = other.EndNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartNum = input.ReadInt64();
            break;
          }
          case 16: {
            EndNum = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionLimit : pb::IMessage<TransactionLimit> {
    private static readonly pb::MessageParser<TransactionLimit> _parser = new pb::MessageParser<TransactionLimit>(() => new TransactionLimit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionLimit(TransactionLimit other) : this() {
      transactionId_ = other.transactionId_;
      limitNum_ = other.limitNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionLimit Clone() {
      return new TransactionLimit(this);
    }

    /// <summary>Field number for the "transactionId" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private pb::ByteString transactionId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limitNum" field.</summary>
    public const int LimitNumFieldNumber = 2;
    private long limitNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LimitNum {
      get { return limitNum_; }
      set {
        limitNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      if (LimitNum != other.LimitNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
      if (LimitNum != 0L) hash ^= LimitNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TransactionId);
      }
      if (LimitNum != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LimitNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransactionId);
      }
      if (LimitNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LimitNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionLimit other) {
      if (other == null) {
        return;
      }
      if (other.TransactionId.Length != 0) {
        TransactionId = other.TransactionId;
      }
      if (other.LimitNum != 0L) {
        LimitNum = other.LimitNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionId = input.ReadBytes();
            break;
          }
          case 16: {
            LimitNum = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountPaginated : pb::IMessage<AccountPaginated> {
    private static readonly pb::MessageParser<AccountPaginated> _parser = new pb::MessageParser<AccountPaginated>(() => new AccountPaginated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountPaginated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPaginated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPaginated(AccountPaginated other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPaginated Clone() {
      return new AccountPaginated(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::Protocol.Account account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Account Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountPaginated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountPaginated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountPaginated other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::Protocol.Account();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::Protocol.Account();
            }
            input.ReadMessage(account_);
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
          case 24: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TimePaginatedMessage : pb::IMessage<TimePaginatedMessage> {
    private static readonly pb::MessageParser<TimePaginatedMessage> _parser = new pb::MessageParser<TimePaginatedMessage>(() => new TimePaginatedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimePaginatedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePaginatedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePaginatedMessage(TimePaginatedMessage other) : this() {
      TimeMessage = other.timeMessage_ != null ? other.TimeMessage.Clone() : null;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePaginatedMessage Clone() {
      return new TimePaginatedMessage(this);
    }

    /// <summary>Field number for the "timeMessage" field.</summary>
    public const int TimeMessageFieldNumber = 1;
    private global::Protocol.TimeMessage timeMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.TimeMessage TimeMessage {
      get { return timeMessage_; }
      set {
        timeMessage_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimePaginatedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimePaginatedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimeMessage, other.TimeMessage)) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timeMessage_ != null) hash ^= TimeMessage.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timeMessage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeMessage);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timeMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeMessage);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimePaginatedMessage other) {
      if (other == null) {
        return;
      }
      if (other.timeMessage_ != null) {
        if (timeMessage_ == null) {
          timeMessage_ = new global::Protocol.TimeMessage();
        }
        TimeMessage.MergeFrom(other.TimeMessage);
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timeMessage_ == null) {
              timeMessage_ = new global::Protocol.TimeMessage();
            }
            input.ReadMessage(timeMessage_);
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
          case 24: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///deprecated
  /// </summary>
  public sealed partial class AccountNetMessage : pb::IMessage<AccountNetMessage> {
    private static readonly pb::MessageParser<AccountNetMessage> _parser = new pb::MessageParser<AccountNetMessage>(() => new AccountNetMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountNetMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNetMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNetMessage(AccountNetMessage other) : this() {
      freeNetUsed_ = other.freeNetUsed_;
      freeNetLimit_ = other.freeNetLimit_;
      netUsed_ = other.netUsed_;
      netLimit_ = other.netLimit_;
      assetNetUsed_ = other.assetNetUsed_.Clone();
      assetNetLimit_ = other.assetNetLimit_.Clone();
      totalNetLimit_ = other.totalNetLimit_;
      totalNetWeight_ = other.totalNetWeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNetMessage Clone() {
      return new AccountNetMessage(this);
    }

    /// <summary>Field number for the "freeNetUsed" field.</summary>
    public const int FreeNetUsedFieldNumber = 1;
    private long freeNetUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetUsed {
      get { return freeNetUsed_; }
      set {
        freeNetUsed_ = value;
      }
    }

    /// <summary>Field number for the "freeNetLimit" field.</summary>
    public const int FreeNetLimitFieldNumber = 2;
    private long freeNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetLimit {
      get { return freeNetLimit_; }
      set {
        freeNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "NetUsed" field.</summary>
    public const int NetUsedFieldNumber = 3;
    private long netUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetUsed {
      get { return netUsed_; }
      set {
        netUsed_ = value;
      }
    }

    /// <summary>Field number for the "NetLimit" field.</summary>
    public const int NetLimitFieldNumber = 4;
    private long netLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetLimit {
      get { return netLimit_; }
      set {
        netLimit_ = value;
      }
    }

    /// <summary>Field number for the "assetNetUsed" field.</summary>
    public const int AssetNetUsedFieldNumber = 5;
    private static readonly pbc::MapField<string, long>.Codec _map_assetNetUsed_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt64(16), 42);
    private readonly pbc::MapField<string, long> assetNetUsed_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> AssetNetUsed {
      get { return assetNetUsed_; }
    }

    /// <summary>Field number for the "assetNetLimit" field.</summary>
    public const int AssetNetLimitFieldNumber = 6;
    private static readonly pbc::MapField<string, long>.Codec _map_assetNetLimit_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt64(16), 50);
    private readonly pbc::MapField<string, long> assetNetLimit_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> AssetNetLimit {
      get { return assetNetLimit_; }
    }

    /// <summary>Field number for the "TotalNetLimit" field.</summary>
    public const int TotalNetLimitFieldNumber = 7;
    private long totalNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalNetLimit {
      get { return totalNetLimit_; }
      set {
        totalNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "TotalNetWeight" field.</summary>
    public const int TotalNetWeightFieldNumber = 8;
    private long totalNetWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalNetWeight {
      get { return totalNetWeight_; }
      set {
        totalNetWeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountNetMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountNetMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FreeNetUsed != other.FreeNetUsed) return false;
      if (FreeNetLimit != other.FreeNetLimit) return false;
      if (NetUsed != other.NetUsed) return false;
      if (NetLimit != other.NetLimit) return false;
      if (!AssetNetUsed.Equals(other.AssetNetUsed)) return false;
      if (!AssetNetLimit.Equals(other.AssetNetLimit)) return false;
      if (TotalNetLimit != other.TotalNetLimit) return false;
      if (TotalNetWeight != other.TotalNetWeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FreeNetUsed != 0L) hash ^= FreeNetUsed.GetHashCode();
      if (FreeNetLimit != 0L) hash ^= FreeNetLimit.GetHashCode();
      if (NetUsed != 0L) hash ^= NetUsed.GetHashCode();
      if (NetLimit != 0L) hash ^= NetLimit.GetHashCode();
      hash ^= AssetNetUsed.GetHashCode();
      hash ^= AssetNetLimit.GetHashCode();
      if (TotalNetLimit != 0L) hash ^= TotalNetLimit.GetHashCode();
      if (TotalNetWeight != 0L) hash ^= TotalNetWeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FreeNetUsed != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FreeNetUsed);
      }
      if (FreeNetLimit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FreeNetLimit);
      }
      if (NetUsed != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NetUsed);
      }
      if (NetLimit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NetLimit);
      }
      assetNetUsed_.WriteTo(output, _map_assetNetUsed_codec);
      assetNetLimit_.WriteTo(output, _map_assetNetLimit_codec);
      if (TotalNetLimit != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TotalNetLimit);
      }
      if (TotalNetWeight != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalNetWeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FreeNetUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FreeNetUsed);
      }
      if (FreeNetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FreeNetLimit);
      }
      if (NetUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetUsed);
      }
      if (NetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetLimit);
      }
      size += assetNetUsed_.CalculateSize(_map_assetNetUsed_codec);
      size += assetNetLimit_.CalculateSize(_map_assetNetLimit_codec);
      if (TotalNetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalNetLimit);
      }
      if (TotalNetWeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalNetWeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountNetMessage other) {
      if (other == null) {
        return;
      }
      if (other.FreeNetUsed != 0L) {
        FreeNetUsed = other.FreeNetUsed;
      }
      if (other.FreeNetLimit != 0L) {
        FreeNetLimit = other.FreeNetLimit;
      }
      if (other.NetUsed != 0L) {
        NetUsed = other.NetUsed;
      }
      if (other.NetLimit != 0L) {
        NetLimit = other.NetLimit;
      }
      assetNetUsed_.Add(other.assetNetUsed_);
      assetNetLimit_.Add(other.assetNetLimit_);
      if (other.TotalNetLimit != 0L) {
        TotalNetLimit = other.TotalNetLimit;
      }
      if (other.TotalNetWeight != 0L) {
        TotalNetWeight = other.TotalNetWeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FreeNetUsed = input.ReadInt64();
            break;
          }
          case 16: {
            FreeNetLimit = input.ReadInt64();
            break;
          }
          case 24: {
            NetUsed = input.ReadInt64();
            break;
          }
          case 32: {
            NetLimit = input.ReadInt64();
            break;
          }
          case 42: {
            assetNetUsed_.AddEntriesFrom(input, _map_assetNetUsed_codec);
            break;
          }
          case 50: {
            assetNetLimit_.AddEntriesFrom(input, _map_assetNetLimit_codec);
            break;
          }
          case 56: {
            TotalNetLimit = input.ReadInt64();
            break;
          }
          case 64: {
            TotalNetWeight = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountResourceMessage : pb::IMessage<AccountResourceMessage> {
    private static readonly pb::MessageParser<AccountResourceMessage> _parser = new pb::MessageParser<AccountResourceMessage>(() => new AccountResourceMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountResourceMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountResourceMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountResourceMessage(AccountResourceMessage other) : this() {
      freeNetUsed_ = other.freeNetUsed_;
      freeNetLimit_ = other.freeNetLimit_;
      netUsed_ = other.netUsed_;
      netLimit_ = other.netLimit_;
      assetNetUsed_ = other.assetNetUsed_.Clone();
      assetNetLimit_ = other.assetNetLimit_.Clone();
      totalNetLimit_ = other.totalNetLimit_;
      totalNetWeight_ = other.totalNetWeight_;
      energyUsed_ = other.energyUsed_;
      energyLimit_ = other.energyLimit_;
      totalEnergyLimit_ = other.totalEnergyLimit_;
      totalEnergyWeight_ = other.totalEnergyWeight_;
      storageUsed_ = other.storageUsed_;
      storageLimit_ = other.storageLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountResourceMessage Clone() {
      return new AccountResourceMessage(this);
    }

    /// <summary>Field number for the "freeNetUsed" field.</summary>
    public const int FreeNetUsedFieldNumber = 1;
    private long freeNetUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetUsed {
      get { return freeNetUsed_; }
      set {
        freeNetUsed_ = value;
      }
    }

    /// <summary>Field number for the "freeNetLimit" field.</summary>
    public const int FreeNetLimitFieldNumber = 2;
    private long freeNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetLimit {
      get { return freeNetLimit_; }
      set {
        freeNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "NetUsed" field.</summary>
    public const int NetUsedFieldNumber = 3;
    private long netUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetUsed {
      get { return netUsed_; }
      set {
        netUsed_ = value;
      }
    }

    /// <summary>Field number for the "NetLimit" field.</summary>
    public const int NetLimitFieldNumber = 4;
    private long netLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetLimit {
      get { return netLimit_; }
      set {
        netLimit_ = value;
      }
    }

    /// <summary>Field number for the "assetNetUsed" field.</summary>
    public const int AssetNetUsedFieldNumber = 5;
    private static readonly pbc::MapField<string, long>.Codec _map_assetNetUsed_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt64(16), 42);
    private readonly pbc::MapField<string, long> assetNetUsed_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> AssetNetUsed {
      get { return assetNetUsed_; }
    }

    /// <summary>Field number for the "assetNetLimit" field.</summary>
    public const int AssetNetLimitFieldNumber = 6;
    private static readonly pbc::MapField<string, long>.Codec _map_assetNetLimit_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt64(16), 50);
    private readonly pbc::MapField<string, long> assetNetLimit_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> AssetNetLimit {
      get { return assetNetLimit_; }
    }

    /// <summary>Field number for the "TotalNetLimit" field.</summary>
    public const int TotalNetLimitFieldNumber = 7;
    private long totalNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalNetLimit {
      get { return totalNetLimit_; }
      set {
        totalNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "TotalNetWeight" field.</summary>
    public const int TotalNetWeightFieldNumber = 8;
    private long totalNetWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalNetWeight {
      get { return totalNetWeight_; }
      set {
        totalNetWeight_ = value;
      }
    }

    /// <summary>Field number for the "EnergyUsed" field.</summary>
    public const int EnergyUsedFieldNumber = 13;
    private long energyUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnergyUsed {
      get { return energyUsed_; }
      set {
        energyUsed_ = value;
      }
    }

    /// <summary>Field number for the "EnergyLimit" field.</summary>
    public const int EnergyLimitFieldNumber = 14;
    private long energyLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnergyLimit {
      get { return energyLimit_; }
      set {
        energyLimit_ = value;
      }
    }

    /// <summary>Field number for the "TotalEnergyLimit" field.</summary>
    public const int TotalEnergyLimitFieldNumber = 15;
    private long totalEnergyLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalEnergyLimit {
      get { return totalEnergyLimit_; }
      set {
        totalEnergyLimit_ = value;
      }
    }

    /// <summary>Field number for the "TotalEnergyWeight" field.</summary>
    public const int TotalEnergyWeightFieldNumber = 16;
    private long totalEnergyWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalEnergyWeight {
      get { return totalEnergyWeight_; }
      set {
        totalEnergyWeight_ = value;
      }
    }

    /// <summary>Field number for the "storageUsed" field.</summary>
    public const int StorageUsedFieldNumber = 21;
    private long storageUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StorageUsed {
      get { return storageUsed_; }
      set {
        storageUsed_ = value;
      }
    }

    /// <summary>Field number for the "storageLimit" field.</summary>
    public const int StorageLimitFieldNumber = 22;
    private long storageLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StorageLimit {
      get { return storageLimit_; }
      set {
        storageLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountResourceMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountResourceMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FreeNetUsed != other.FreeNetUsed) return false;
      if (FreeNetLimit != other.FreeNetLimit) return false;
      if (NetUsed != other.NetUsed) return false;
      if (NetLimit != other.NetLimit) return false;
      if (!AssetNetUsed.Equals(other.AssetNetUsed)) return false;
      if (!AssetNetLimit.Equals(other.AssetNetLimit)) return false;
      if (TotalNetLimit != other.TotalNetLimit) return false;
      if (TotalNetWeight != other.TotalNetWeight) return false;
      if (EnergyUsed != other.EnergyUsed) return false;
      if (EnergyLimit != other.EnergyLimit) return false;
      if (TotalEnergyLimit != other.TotalEnergyLimit) return false;
      if (TotalEnergyWeight != other.TotalEnergyWeight) return false;
      if (StorageUsed != other.StorageUsed) return false;
      if (StorageLimit != other.StorageLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FreeNetUsed != 0L) hash ^= FreeNetUsed.GetHashCode();
      if (FreeNetLimit != 0L) hash ^= FreeNetLimit.GetHashCode();
      if (NetUsed != 0L) hash ^= NetUsed.GetHashCode();
      if (NetLimit != 0L) hash ^= NetLimit.GetHashCode();
      hash ^= AssetNetUsed.GetHashCode();
      hash ^= AssetNetLimit.GetHashCode();
      if (TotalNetLimit != 0L) hash ^= TotalNetLimit.GetHashCode();
      if (TotalNetWeight != 0L) hash ^= TotalNetWeight.GetHashCode();
      if (EnergyUsed != 0L) hash ^= EnergyUsed.GetHashCode();
      if (EnergyLimit != 0L) hash ^= EnergyLimit.GetHashCode();
      if (TotalEnergyLimit != 0L) hash ^= TotalEnergyLimit.GetHashCode();
      if (TotalEnergyWeight != 0L) hash ^= TotalEnergyWeight.GetHashCode();
      if (StorageUsed != 0L) hash ^= StorageUsed.GetHashCode();
      if (StorageLimit != 0L) hash ^= StorageLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FreeNetUsed != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FreeNetUsed);
      }
      if (FreeNetLimit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FreeNetLimit);
      }
      if (NetUsed != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NetUsed);
      }
      if (NetLimit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NetLimit);
      }
      assetNetUsed_.WriteTo(output, _map_assetNetUsed_codec);
      assetNetLimit_.WriteTo(output, _map_assetNetLimit_codec);
      if (TotalNetLimit != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TotalNetLimit);
      }
      if (TotalNetWeight != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalNetWeight);
      }
      if (EnergyUsed != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(EnergyUsed);
      }
      if (EnergyLimit != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(EnergyLimit);
      }
      if (TotalEnergyLimit != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(TotalEnergyLimit);
      }
      if (TotalEnergyWeight != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(TotalEnergyWeight);
      }
      if (StorageUsed != 0L) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(StorageUsed);
      }
      if (StorageLimit != 0L) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(StorageLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FreeNetUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FreeNetUsed);
      }
      if (FreeNetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FreeNetLimit);
      }
      if (NetUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetUsed);
      }
      if (NetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetLimit);
      }
      size += assetNetUsed_.CalculateSize(_map_assetNetUsed_codec);
      size += assetNetLimit_.CalculateSize(_map_assetNetLimit_codec);
      if (TotalNetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalNetLimit);
      }
      if (TotalNetWeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalNetWeight);
      }
      if (EnergyUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnergyUsed);
      }
      if (EnergyLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnergyLimit);
      }
      if (TotalEnergyLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalEnergyLimit);
      }
      if (TotalEnergyWeight != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TotalEnergyWeight);
      }
      if (StorageUsed != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(StorageUsed);
      }
      if (StorageLimit != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(StorageLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountResourceMessage other) {
      if (other == null) {
        return;
      }
      if (other.FreeNetUsed != 0L) {
        FreeNetUsed = other.FreeNetUsed;
      }
      if (other.FreeNetLimit != 0L) {
        FreeNetLimit = other.FreeNetLimit;
      }
      if (other.NetUsed != 0L) {
        NetUsed = other.NetUsed;
      }
      if (other.NetLimit != 0L) {
        NetLimit = other.NetLimit;
      }
      assetNetUsed_.Add(other.assetNetUsed_);
      assetNetLimit_.Add(other.assetNetLimit_);
      if (other.TotalNetLimit != 0L) {
        TotalNetLimit = other.TotalNetLimit;
      }
      if (other.TotalNetWeight != 0L) {
        TotalNetWeight = other.TotalNetWeight;
      }
      if (other.EnergyUsed != 0L) {
        EnergyUsed = other.EnergyUsed;
      }
      if (other.EnergyLimit != 0L) {
        EnergyLimit = other.EnergyLimit;
      }
      if (other.TotalEnergyLimit != 0L) {
        TotalEnergyLimit = other.TotalEnergyLimit;
      }
      if (other.TotalEnergyWeight != 0L) {
        TotalEnergyWeight = other.TotalEnergyWeight;
      }
      if (other.StorageUsed != 0L) {
        StorageUsed = other.StorageUsed;
      }
      if (other.StorageLimit != 0L) {
        StorageLimit = other.StorageLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FreeNetUsed = input.ReadInt64();
            break;
          }
          case 16: {
            FreeNetLimit = input.ReadInt64();
            break;
          }
          case 24: {
            NetUsed = input.ReadInt64();
            break;
          }
          case 32: {
            NetLimit = input.ReadInt64();
            break;
          }
          case 42: {
            assetNetUsed_.AddEntriesFrom(input, _map_assetNetUsed_codec);
            break;
          }
          case 50: {
            assetNetLimit_.AddEntriesFrom(input, _map_assetNetLimit_codec);
            break;
          }
          case 56: {
            TotalNetLimit = input.ReadInt64();
            break;
          }
          case 64: {
            TotalNetWeight = input.ReadInt64();
            break;
          }
          case 104: {
            EnergyUsed = input.ReadInt64();
            break;
          }
          case 112: {
            EnergyLimit = input.ReadInt64();
            break;
          }
          case 120: {
            TotalEnergyLimit = input.ReadInt64();
            break;
          }
          case 128: {
            TotalEnergyWeight = input.ReadInt64();
            break;
          }
          case 168: {
            StorageUsed = input.ReadInt64();
            break;
          }
          case 176: {
            StorageLimit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaginatedMessage : pb::IMessage<PaginatedMessage> {
    private static readonly pb::MessageParser<PaginatedMessage> _parser = new pb::MessageParser<PaginatedMessage>(() => new PaginatedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaginatedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginatedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginatedMessage(PaginatedMessage other) : this() {
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginatedMessage Clone() {
      return new PaginatedMessage(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaginatedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaginatedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaginatedMessage other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt64();
            break;
          }
          case 16: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EasyTransferMessage : pb::IMessage<EasyTransferMessage> {
    private static readonly pb::MessageParser<EasyTransferMessage> _parser = new pb::MessageParser<EasyTransferMessage>(() => new EasyTransferMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EasyTransferMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferMessage(EasyTransferMessage other) : this() {
      passPhrase_ = other.passPhrase_;
      toAddress_ = other.toAddress_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferMessage Clone() {
      return new EasyTransferMessage(this);
    }

    /// <summary>Field number for the "passPhrase" field.</summary>
    public const int PassPhraseFieldNumber = 1;
    private pb::ByteString passPhrase_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PassPhrase {
      get { return passPhrase_; }
      set {
        passPhrase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toAddress" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EasyTransferMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EasyTransferMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PassPhrase != other.PassPhrase) return false;
      if (ToAddress != other.ToAddress) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PassPhrase.Length != 0) hash ^= PassPhrase.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PassPhrase.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(PassPhrase);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PassPhrase.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PassPhrase);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EasyTransferMessage other) {
      if (other == null) {
        return;
      }
      if (other.PassPhrase.Length != 0) {
        PassPhrase = other.PassPhrase;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PassPhrase = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EasyTransferByPrivateMessage : pb::IMessage<EasyTransferByPrivateMessage> {
    private static readonly pb::MessageParser<EasyTransferByPrivateMessage> _parser = new pb::MessageParser<EasyTransferByPrivateMessage>(() => new EasyTransferByPrivateMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EasyTransferByPrivateMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferByPrivateMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferByPrivateMessage(EasyTransferByPrivateMessage other) : this() {
      privateKey_ = other.privateKey_;
      toAddress_ = other.toAddress_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferByPrivateMessage Clone() {
      return new EasyTransferByPrivateMessage(this);
    }

    /// <summary>Field number for the "privateKey" field.</summary>
    public const int PrivateKeyFieldNumber = 1;
    private pb::ByteString privateKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toAddress" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EasyTransferByPrivateMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EasyTransferByPrivateMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrivateKey != other.PrivateKey) return false;
      if (ToAddress != other.ToAddress) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(PrivateKey);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrivateKey);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EasyTransferByPrivateMessage other) {
      if (other == null) {
        return;
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PrivateKey = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EasyTransferResponse : pb::IMessage<EasyTransferResponse> {
    private static readonly pb::MessageParser<EasyTransferResponse> _parser = new pb::MessageParser<EasyTransferResponse>(() => new EasyTransferResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EasyTransferResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferResponse(EasyTransferResponse other) : this() {
      Transaction = other.transaction_ != null ? other.Transaction.Clone() : null;
      Result = other.result_ != null ? other.Result.Clone() : null;
      txid_ = other.txid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferResponse Clone() {
      return new EasyTransferResponse(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Protocol.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Protocol.Return result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Return Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "txid" field.</summary>
    public const int TxidFieldNumber = 3;
    private pb::ByteString txid_ = pb::ByteString.Empty;
    /// <summary>
    ///transaction id =  sha256(transaction.rowdata)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Txid {
      get { return txid_; }
      set {
        txid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EasyTransferResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EasyTransferResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      if (Txid != other.Txid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (Txid.Length != 0) hash ^= Txid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (Txid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Txid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (Txid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Txid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EasyTransferResponse other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          transaction_ = new global::Protocol.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::Protocol.Return();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.Txid.Length != 0) {
        Txid = other.Txid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              transaction_ = new global::Protocol.Transaction();
            }
            input.ReadMessage(transaction_);
            break;
          }
          case 18: {
            if (result_ == null) {
              result_ = new global::Protocol.Return();
            }
            input.ReadMessage(result_);
            break;
          }
          case 26: {
            Txid = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddressPrKeyPairMessage : pb::IMessage<AddressPrKeyPairMessage> {
    private static readonly pb::MessageParser<AddressPrKeyPairMessage> _parser = new pb::MessageParser<AddressPrKeyPairMessage>(() => new AddressPrKeyPairMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddressPrKeyPairMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressPrKeyPairMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressPrKeyPairMessage(AddressPrKeyPairMessage other) : this() {
      address_ = other.address_;
      privateKey_ = other.privateKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressPrKeyPairMessage Clone() {
      return new AddressPrKeyPairMessage(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "privateKey" field.</summary>
    public const int PrivateKeyFieldNumber = 2;
    private string privateKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddressPrKeyPairMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddressPrKeyPairMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (PrivateKey != other.PrivateKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PrivateKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrivateKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddressPrKeyPairMessage other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 18: {
            PrivateKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionExtention : pb::IMessage<TransactionExtention> {
    private static readonly pb::MessageParser<TransactionExtention> _parser = new pb::MessageParser<TransactionExtention>(() => new TransactionExtention());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionExtention> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionExtention() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionExtention(TransactionExtention other) : this() {
      Transaction = other.transaction_ != null ? other.Transaction.Clone() : null;
      txid_ = other.txid_;
      constantResult_ = other.constantResult_.Clone();
      Result = other.result_ != null ? other.Result.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionExtention Clone() {
      return new TransactionExtention(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Protocol.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "txid" field.</summary>
    public const int TxidFieldNumber = 2;
    private pb::ByteString txid_ = pb::ByteString.Empty;
    /// <summary>
    ///transaction id =  sha256(transaction.rowdata)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Txid {
      get { return txid_; }
      set {
        txid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "constant_result" field.</summary>
    public const int ConstantResultFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_constantResult_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> constantResult_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> ConstantResult {
      get { return constantResult_; }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 4;
    private global::Protocol.Return result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Return Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionExtention);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionExtention other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (Txid != other.Txid) return false;
      if(!constantResult_.Equals(other.constantResult_)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (Txid.Length != 0) hash ^= Txid.GetHashCode();
      hash ^= constantResult_.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (Txid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Txid);
      }
      constantResult_.WriteTo(output, _repeated_constantResult_codec);
      if (result_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (Txid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Txid);
      }
      size += constantResult_.CalculateSize(_repeated_constantResult_codec);
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionExtention other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          transaction_ = new global::Protocol.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.Txid.Length != 0) {
        Txid = other.Txid;
      }
      constantResult_.Add(other.constantResult_);
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::Protocol.Return();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              transaction_ = new global::Protocol.Transaction();
            }
            input.ReadMessage(transaction_);
            break;
          }
          case 18: {
            Txid = input.ReadBytes();
            break;
          }
          case 26: {
            constantResult_.AddEntriesFrom(input, _repeated_constantResult_codec);
            break;
          }
          case 34: {
            if (result_ == null) {
              result_ = new global::Protocol.Return();
            }
            input.ReadMessage(result_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockExtention : pb::IMessage<BlockExtention> {
    private static readonly pb::MessageParser<BlockExtention> _parser = new pb::MessageParser<BlockExtention>(() => new BlockExtention());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockExtention> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockExtention() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockExtention(BlockExtention other) : this() {
      transactions_ = other.transactions_.Clone();
      BlockHeader = other.blockHeader_ != null ? other.BlockHeader.Clone() : null;
      blockid_ = other.blockid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockExtention Clone() {
      return new BlockExtention(this);
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.TransactionExtention> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.TransactionExtention.Parser);
    private readonly pbc::RepeatedField<global::Protocol.TransactionExtention> transactions_ = new pbc::RepeatedField<global::Protocol.TransactionExtention>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.TransactionExtention> Transactions {
      get { return transactions_; }
    }

    /// <summary>Field number for the "block_header" field.</summary>
    public const int BlockHeaderFieldNumber = 2;
    private global::Protocol.BlockHeader blockHeader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.BlockHeader BlockHeader {
      get { return blockHeader_; }
      set {
        blockHeader_ = value;
      }
    }

    /// <summary>Field number for the "blockid" field.</summary>
    public const int BlockidFieldNumber = 3;
    private pb::ByteString blockid_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Blockid {
      get { return blockid_; }
      set {
        blockid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockExtention);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockExtention other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactions_.Equals(other.transactions_)) return false;
      if (!object.Equals(BlockHeader, other.BlockHeader)) return false;
      if (Blockid != other.Blockid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactions_.GetHashCode();
      if (blockHeader_ != null) hash ^= BlockHeader.GetHashCode();
      if (Blockid.Length != 0) hash ^= Blockid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (blockHeader_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BlockHeader);
      }
      if (Blockid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Blockid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (blockHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockHeader);
      }
      if (Blockid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Blockid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockExtention other) {
      if (other == null) {
        return;
      }
      transactions_.Add(other.transactions_);
      if (other.blockHeader_ != null) {
        if (blockHeader_ == null) {
          blockHeader_ = new global::Protocol.BlockHeader();
        }
        BlockHeader.MergeFrom(other.BlockHeader);
      }
      if (other.Blockid.Length != 0) {
        Blockid = other.Blockid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
          case 18: {
            if (blockHeader_ == null) {
              blockHeader_ = new global::Protocol.BlockHeader();
            }
            input.ReadMessage(blockHeader_);
            break;
          }
          case 26: {
            Blockid = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockListExtention : pb::IMessage<BlockListExtention> {
    private static readonly pb::MessageParser<BlockListExtention> _parser = new pb::MessageParser<BlockListExtention>(() => new BlockListExtention());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockListExtention> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockListExtention() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockListExtention(BlockListExtention other) : this() {
      block_ = other.block_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockListExtention Clone() {
      return new BlockListExtention(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.BlockExtention> _repeated_block_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.BlockExtention.Parser);
    private readonly pbc::RepeatedField<global::Protocol.BlockExtention> block_ = new pbc::RepeatedField<global::Protocol.BlockExtention>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.BlockExtention> Block {
      get { return block_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockListExtention);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockListExtention other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!block_.Equals(other.block_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= block_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      block_.WriteTo(output, _repeated_block_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += block_.CalculateSize(_repeated_block_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockListExtention other) {
      if (other == null) {
        return;
      }
      block_.Add(other.block_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            block_.AddEntriesFrom(input, _repeated_block_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionListExtention : pb::IMessage<TransactionListExtention> {
    private static readonly pb::MessageParser<TransactionListExtention> _parser = new pb::MessageParser<TransactionListExtention>(() => new TransactionListExtention());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionListExtention> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ApiReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionListExtention() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionListExtention(TransactionListExtention other) : this() {
      transaction_ = other.transaction_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionListExtention Clone() {
      return new TransactionListExtention(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.TransactionExtention> _repeated_transaction_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.TransactionExtention.Parser);
    private readonly pbc::RepeatedField<global::Protocol.TransactionExtention> transaction_ = new pbc::RepeatedField<global::Protocol.TransactionExtention>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.TransactionExtention> Transaction {
      get { return transaction_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionListExtention);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionListExtention other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transaction_.Equals(other.transaction_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transaction_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transaction_.WriteTo(output, _repeated_transaction_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transaction_.CalculateSize(_repeated_transaction_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionListExtention other) {
      if (other == null) {
        return;
      }
      transaction_.Add(other.transaction_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transaction_.AddEntriesFrom(input, _repeated_transaction_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
